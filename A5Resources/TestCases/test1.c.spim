
	.data
area_:	.double 0.0
perimeter_:	.double 0.0
x_:	.double 0.0
a_:	.word 0
b_:	.word 0

	.text 			# The .text assembler directive indicates
	.globl main		# The following is the code (as oppose to data)
main:				# .globl makes main know to the 
				# outside of the program.
# Prologue begins 
	sw $fp, 0($sp)		# Save the frame pointer
	sub $fp, $sp, 4		# Update the frame pointer

	sub $sp, $sp, 40		# Make space for the locals
# Prologue ends

	li.d $f2, 3.00
	neg.d $f4, $f2
	s.d $f4, -20($fp)
	li $v0, 9
	sw $v0, -12($fp)
	li $v0, 2
	sw $v0, -8($fp)
	lw $v0, -8($fp)
	li $t0, 0
	add $t1, $v0, $t0
	sw $t1, -8($fp)
	li.d $f2, 4.00
	s.d $f2, area_
	lw $v0, -12($fp)
	lw $t0, -8($fp)
	li $t1, 0
	seq $t2, $t0, $t1
	beq $t2, $zero, label24 
	li $t0, 7
	or $t3, $t0, $zero
	j label25

label24:    	
	li $t1, 33
	or $t3, $t1, $zero

label25:    	
	add $t0, $v0, $t3
	sw $t0, -8($fp)
	lw $v0, -8($fp)
	li $t0, 0
	seq $t1, $v0, $t0
	beq $t1, $zero, label26 
	li $v0, 7
	or $t0, $v0, $zero
	j label27

label26:    	
	li $t0, 33
	lw $t2, -12($fp)
	add $t3, $t0, $t2
	or $t0, $t3, $zero

label27:    	
	sw $t0, -8($fp)
	lw $v0, -8($fp)
	li $t0, 2
	li $t1, 3
	slt $t2, $t0, $t1
	beq $t2, $zero, label28 
	li $t0, 4
	or $t3, $t0, $zero
	j label29

label28:    	
	li $t1, 6
	or $t3, $t1, $zero

label29:    	
	add $t0, $v0, $t3
	sw $t0, -8($fp)
	li $v0, 9
	sw $v0, -8($fp)
	li $v0, 0
	sw $v0, -12($fp)
	li.d $f2, 9.00
	s.d $f2, area_
	li $v0, 8
	sw $v0, -8($fp)
	li $v0, 1
	sw $v0, a_
	lw $v0, -8($fp)
	li $t0, 2
	seq $t1, $v0, $t0
	beq $t1, $zero, label30 
	li.d $f2, 4.00
	s.d $f2, -20($fp)

label30:    	
	lw $v0, -8($fp)
	li $t0, 5
	sle $t1, $v0, $t0
	lw $v0, -8($fp)
	li $t0, 4
	slt $t2, $v0, $t0
	lw $v0, -8($fp)
	li $t0, 5
	sgt $t3, $v0, $t0
	and $v0, $t2, $t3
	or $t0, $t1, $v0
	beq $t0, $zero, label31 
	li $v0, 8
	sw $v0, -8($fp)
	li $v0, 7
	sw $v0, -12($fp)
	j label32

label31:    	
	li $v0, 9
	sw $v0, -8($fp)

label32:    	

label33:    	
	lw $v0, -8($fp)
	li $t0, 5
	sle $t2, $v0, $t0
	lw $v0, -8($fp)
	li $t0, 4
	slt $t3, $v0, $t0
	or $v0, $t2, $t3
	lw $t0, -8($fp)
	li $t2, 5
	sgt $t3, $t0, $t2
	or $t0, $v0, $t3
	beq $t0, $zero, label35 
	li $v0, 8
	sw $v0, -8($fp)
	j label36

label35:    	
	li $v0, 9
	sw $v0, -8($fp)
	li $v0, 8
	sw $v0, -8($fp)

label36:    	
	j label38

label37:    	
	li $v0, 9
	sw $v0, -12($fp)

label38:    	
	lw $v0, -8($fp)
	li $t0, 0
	seq $t2, $v0, $t0
	bne $t2, $zero, label37 
	j label40

label39:    	
	li $v0, 8
	sw $v0, -12($fp)

label40:    	
	lw $v0, -12($fp)
	li $t0, 0
	seq $t2, $v0, $t0
	bne $t2, $zero, label39 

label34:    	
	lw $v0, -8($fp)
	li $t0, 4
	seq $t1, $v0, $t0
	bne $t1, $zero, label33 
	lw $v0, -8($fp)
	li $t0, 5
	sge $t1, $v0, $t0
	lw $v0, -8($fp)
	li $t0, 4
	slt $t2, $v0, $t0
	and $v0, $t1, $t2
	beq $v0, $zero, label44 
	j label42

label41:    	
	li $t0, 3
	sw $t0, -8($fp)

label42:    	
	lw $t0, -8($fp)
	li $t1, 0
	seq $t2, $t0, $t1
	bne $t2, $zero, label41 
	lw $t0, -8($fp)
	li $t1, 0
	sgt $t2, $t0, $t1
	beq $t2, $zero, label43 
	li $t0, 8
	sw $t0, -8($fp)
	li $t0, 9
	sw $t0, -8($fp)

label43:    	
	li $t0, 8
	sw $t0, -8($fp)

label44:    	
	j label46

label45:    	
	li $v0, 9
	sw $v0, -12($fp)

label46:    	
	lw $v0, -12($fp)
	li $t0, 3
	seq $t1, $v0, $t0
	bne $t1, $zero, label45 
	lw $v0, -8($fp)
	li $t0, 3
	seq $t1, $v0, $t0
	beq $t1, $zero, label47 
	li $v0, 9
	sw $v0, -12($fp)

label47:    	
	j label49

label48:    	
	j label51

label50:    	
	li $v0, 9
	sw $v0, -8($fp)

label51:    	
	lw $v0, -12($fp)
	li $t0, 3
	seq $t2, $v0, $t0
	bne $t2, $zero, label50 

label49:    	
	lw $v0, -12($fp)
	li $t0, 3
	seq $t1, $v0, $t0
	bne $t1, $zero, label48 

label52:    	
	li $v0, 1
	sw $v0, -8($fp)

label53:    	
	lw $v0, -8($fp)
	li $t0, 2
	seq $t1, $v0, $t0
	bne $t1, $zero, label52 
	li.d $f2, 2.00
	li.d $f4, 3.00
	mul.d $f6, $f2, $f4
	s.d $f6, area_
	li.d $f2, 2.00
	li.d $f4, 22.00
	mul.d $f6, $f2, $f4
	s.d $f6, perimeter_
	li $v0, 0
	sw $v0, -28($fp)
	li $v0, 1
	sw $v0, -32($fp)
	li $v0, 0
	sw $v0, a_
	lw $v0, -28($fp)
	lw $t0, -32($fp)
	sgt $t1, $v0, $t0
	beq $t1, $zero, label54 
	li $v0, 5
	sw $v0, b_
	j label55

label54:    	
	li $v0, 4
	sw $v0, b_

label55:    	
	lw $v0, -28($fp)
	lw $t0, -32($fp)
	sgt $t1, $v0, $t0
	beq $t1, $zero, label56 
	li $v0, 5
	sw $v0, b_
	j label57

label56:    	
	li $v0, 4
	sw $v0, b_

label57:    	
	lw $v0, -28($fp)
	lw $t0, -32($fp)
	sgt $t1, $v0, $t0
	beq $t1, $zero, label58 
	li $v0, 5
	sw $v0, b_
	j label59

label58:    	
	li $v0, 4
	sw $v0, b_

label59:    	
	lw $v0, -28($fp)
	lw $t0, -32($fp)
	sgt $t1, $v0, $t0
	beq $t1, $zero, label60 
	li $v0, 5
	sw $v0, b_
	j label61

label60:    	
	li $v0, 4
	sw $v0, b_

label61:    	
	lw $v0, -28($fp)
	lw $t0, -32($fp)
	sgt $t1, $v0, $t0
	beq $t1, $zero, label64 
	lw $v0, -28($fp)
	lw $t0, -32($fp)
	sgt $t2, $v0, $t0
	beq $t2, $zero, label62 
	li $v0, 4
	sw $v0, b_
	j label63

label62:    	
	li $v0, 5
	sw $v0, b_

label63:    	
	j label65

label64:    	
	li $v0, 6
	sw $v0, b_

label65:    	

# Epilogue Begins
	add $sp, $sp, 40
	lw $fp, 0($sp)  
	jr        $31		# Jump back to the operating system.
# Epilogue Ends

