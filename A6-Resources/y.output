Terminals unused in grammar

   BBNUM
   UMINUS


Grammar

    0 $accept: program $end

    1 program: total_code

    2 total_code: variable_declaration total_code
    3           | function_declaration total_code
    4           | function_definition_list

    5 function_definition_list: function_definition_list function_definition
    6                         | function_definition

    7 $@1: %empty

    8 function_definition: return_type NAME '(' func_def_decl_args_list ')' '{' $@1 variable_declaration_list statement_list '}'

    9 function_declaration: return_type NAME '(' func_def_decl_args_list ')' ';'
   10                     | return_type NAME '(' type_list ')' ';'

   11 func_def_decl_args_list: %empty
   12                        | type_var_list

   13 function_call: NAME '(' func_call_args_list ')' ';'

   14 func_call_args_list: func_call_args_list1
   15                    | %empty

   16 func_call_args_list1: func_arg ',' func_call_args_list1
   17                     | func_arg

   18 func_arg: variable
   19         | constant

   20 type_var_list: type_var_list ',' return_type NAME
   21              | return_type NAME

   22 type_list: type_list ',' return_type
   23          | return_type

   24 return_type: INTEGER
   25            | FLOAT
   26            | VOID

   27 variable_declaration_list: variable_declaration_list variable_declaration
   28                          | %empty

   29 variable_declaration: return_type variable_list ';'

   30 variable_list: NAME
   31              | variable_list ',' NAME

   32 statement_list: %empty
   33               | statement_list single_stmt

   34 single_stmt: assignment_statement
   35            | if_stmt
   36            | while_stmt
   37            | do_while_stmt
   38            | sequence_list
   39            | print_stmt
   40            | function_call
   41            | return_stmt

   42 assignment_statement: variable ASSIGN expression ';'
   43                     | variable ASSIGN function_call

   44 expression: expression '*' expression
   45           | expression '/' expression
   46           | expression '+' expression
   47           | expression '-' expression
   48           | variable
   49           | constant
   50           | '(' expression ')'
   51           | '-' expression
   52           | logical_expr '?' expression ':' expression

   53 variable: NAME

   54 constant: INTEGER_NUMBER
   55         | DOUBLE_NUMBER

   56 if_stmt: IF '(' logical_expr ')' single_stmt
   57        | IF '(' logical_expr ')' single_stmt ELSE single_stmt

   58 while_stmt: WHILE '(' logical_expr ')' single_stmt

   59 do_while_stmt: DO single_stmt WHILE '(' logical_expr ')' ';'

   60 print_stmt: PRINT variable ';'

   61 logical_expr: logical_expr AND logical_expr
   62             | logical_expr OR logical_expr
   63             | NOT logical_expr
   64             | '(' logical_expr ')'
   65             | relational_expr

   66 relational_expr: expression LESS_THAN expression
   67                | expression LESS_THAN_EQUAL expression
   68                | expression GREATER_THAN expression
   69                | expression GREATER_THAN_EQUAL expression
   70                | expression EQUAL expression
   71                | expression NOT_EQUAL expression

   72 sequence_list: '{' statement_list '}'

   73 return_stmt: RETURN expression ';'
   74            | RETURN ';'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 8 9 10 13 50 56 57 58 59 64
')' (41) 8 9 10 13 50 56 57 58 59 64
'*' (42) 44
'+' (43) 46
',' (44) 16 20 22 31
'-' (45) 47 51
'/' (47) 45
':' (58) 52
';' (59) 9 10 13 29 42 59 60 73 74
'?' (63) 52
'{' (123) 8 72
'}' (125) 8 72
error (256)
INTEGER_NUMBER (258) 54
BBNUM (259)
DOUBLE_NUMBER (260) 55
NAME (261) 8 9 10 13 20 21 30 31 53
RETURN (262) 73 74
INTEGER (263) 24
FLOAT (264) 25
ASSIGN (265) 42 43
VOID (266) 26
UMINUS (267)
WHILE (268) 58 59
GREATER_THAN (269) 68
NOT_EQUAL (270) 71
LESS_THAN (271) 66
LESS_THAN_EQUAL (272) 67
EQUAL (273) 70
GREATER_THAN_EQUAL (274) 69
IF (275) 56 57
ELSE (276) 57
DO (277) 59
AND (278) 61
OR (279) 62
NOT (280) 63
PRINT (281) 60
"then" (282)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1, on right: 0
total_code (42)
    on left: 2 3 4, on right: 1 2 3
function_definition_list (43)
    on left: 5 6, on right: 4 5
function_definition (44)
    on left: 8, on right: 5 6
$@1 (45)
    on left: 7, on right: 8
function_declaration (46)
    on left: 9 10, on right: 3
func_def_decl_args_list (47)
    on left: 11 12, on right: 8 9
function_call (48)
    on left: 13, on right: 40 43
func_call_args_list (49)
    on left: 14 15, on right: 13
func_call_args_list1 (50)
    on left: 16 17, on right: 14 16
func_arg (51)
    on left: 18 19, on right: 16 17
type_var_list (52)
    on left: 20 21, on right: 12 20
type_list (53)
    on left: 22 23, on right: 10 22
return_type (54)
    on left: 24 25 26, on right: 8 9 10 20 21 22 23 29
variable_declaration_list (55)
    on left: 27 28, on right: 8 27
variable_declaration (56)
    on left: 29, on right: 2 27
variable_list (57)
    on left: 30 31, on right: 29 31
statement_list (58)
    on left: 32 33, on right: 8 33 72
single_stmt (59)
    on left: 34 35 36 37 38 39 40 41, on right: 33 56 57 58 59
assignment_statement (60)
    on left: 42 43, on right: 34
expression (61)
    on left: 44 45 46 47 48 49 50 51 52, on right: 42 44 45 46 47 50
    51 52 66 67 68 69 70 71 73
variable (62)
    on left: 53, on right: 18 42 43 48 60
constant (63)
    on left: 54 55, on right: 19 49
if_stmt (64)
    on left: 56 57, on right: 35
while_stmt (65)
    on left: 58, on right: 36
do_while_stmt (66)
    on left: 59, on right: 37
print_stmt (67)
    on left: 60, on right: 39
logical_expr (68)
    on left: 61 62 63 64 65, on right: 52 56 57 58 59 61 62 63 64
relational_expr (69)
    on left: 66 67 68 69 70 71, on right: 65
sequence_list (70)
    on left: 72, on right: 38
return_stmt (71)
    on left: 73 74, on right: 41


State 0

    0 $accept: . program $end

    INTEGER  shift, and go to state 1
    FLOAT    shift, and go to state 2
    VOID     shift, and go to state 3

    program                   go to state 4
    total_code                go to state 5
    function_definition_list  go to state 6
    function_definition       go to state 7
    function_declaration      go to state 8
    return_type               go to state 9
    variable_declaration      go to state 10


State 1

   24 return_type: INTEGER .

    $default  reduce using rule 24 (return_type)


State 2

   25 return_type: FLOAT .

    $default  reduce using rule 25 (return_type)


State 3

   26 return_type: VOID .

    $default  reduce using rule 26 (return_type)


State 4

    0 $accept: program . $end

    $end  shift, and go to state 11


State 5

    1 program: total_code .

    $default  reduce using rule 1 (program)


State 6

    4 total_code: function_definition_list .
    5 function_definition_list: function_definition_list . function_definition

    INTEGER  shift, and go to state 1
    FLOAT    shift, and go to state 2
    VOID     shift, and go to state 3

    $default  reduce using rule 4 (total_code)

    function_definition  go to state 12
    return_type          go to state 13


State 7

    6 function_definition_list: function_definition .

    $default  reduce using rule 6 (function_definition_list)


State 8

    3 total_code: function_declaration . total_code

    INTEGER  shift, and go to state 1
    FLOAT    shift, and go to state 2
    VOID     shift, and go to state 3

    total_code                go to state 14
    function_definition_list  go to state 6
    function_definition       go to state 7
    function_declaration      go to state 8
    return_type               go to state 9
    variable_declaration      go to state 10


State 9

    8 function_definition: return_type . NAME '(' func_def_decl_args_list ')' '{' $@1 variable_declaration_list statement_list '}'
    9 function_declaration: return_type . NAME '(' func_def_decl_args_list ')' ';'
   10                     | return_type . NAME '(' type_list ')' ';'
   29 variable_declaration: return_type . variable_list ';'

    NAME  shift, and go to state 15

    variable_list  go to state 16


State 10

    2 total_code: variable_declaration . total_code

    INTEGER  shift, and go to state 1
    FLOAT    shift, and go to state 2
    VOID     shift, and go to state 3

    total_code                go to state 17
    function_definition_list  go to state 6
    function_definition       go to state 7
    function_declaration      go to state 8
    return_type               go to state 9
    variable_declaration      go to state 10


State 11

    0 $accept: program $end .

    $default  accept


State 12

    5 function_definition_list: function_definition_list function_definition .

    $default  reduce using rule 5 (function_definition_list)


State 13

    8 function_definition: return_type . NAME '(' func_def_decl_args_list ')' '{' $@1 variable_declaration_list statement_list '}'

    NAME  shift, and go to state 18


State 14

    3 total_code: function_declaration total_code .

    $default  reduce using rule 3 (total_code)


State 15

    8 function_definition: return_type NAME . '(' func_def_decl_args_list ')' '{' $@1 variable_declaration_list statement_list '}'
    9 function_declaration: return_type NAME . '(' func_def_decl_args_list ')' ';'
   10                     | return_type NAME . '(' type_list ')' ';'
   30 variable_list: NAME .

    '('  shift, and go to state 19

    $default  reduce using rule 30 (variable_list)


State 16

   29 variable_declaration: return_type variable_list . ';'
   31 variable_list: variable_list . ',' NAME

    ';'  shift, and go to state 20
    ','  shift, and go to state 21


State 17

    2 total_code: variable_declaration total_code .

    $default  reduce using rule 2 (total_code)


State 18

    8 function_definition: return_type NAME . '(' func_def_decl_args_list ')' '{' $@1 variable_declaration_list statement_list '}'

    '('  shift, and go to state 22


State 19

    8 function_definition: return_type NAME '(' . func_def_decl_args_list ')' '{' $@1 variable_declaration_list statement_list '}'
    9 function_declaration: return_type NAME '(' . func_def_decl_args_list ')' ';'
   10                     | return_type NAME '(' . type_list ')' ';'

    INTEGER  shift, and go to state 1
    FLOAT    shift, and go to state 2
    VOID     shift, and go to state 3

    $default  reduce using rule 11 (func_def_decl_args_list)

    func_def_decl_args_list  go to state 23
    type_var_list            go to state 24
    type_list                go to state 25
    return_type              go to state 26


State 20

   29 variable_declaration: return_type variable_list ';' .

    $default  reduce using rule 29 (variable_declaration)


State 21

   31 variable_list: variable_list ',' . NAME

    NAME  shift, and go to state 27


State 22

    8 function_definition: return_type NAME '(' . func_def_decl_args_list ')' '{' $@1 variable_declaration_list statement_list '}'

    INTEGER  shift, and go to state 1
    FLOAT    shift, and go to state 2
    VOID     shift, and go to state 3

    $default  reduce using rule 11 (func_def_decl_args_list)

    func_def_decl_args_list  go to state 28
    type_var_list            go to state 24
    return_type              go to state 29


State 23

    8 function_definition: return_type NAME '(' func_def_decl_args_list . ')' '{' $@1 variable_declaration_list statement_list '}'
    9 function_declaration: return_type NAME '(' func_def_decl_args_list . ')' ';'

    ')'  shift, and go to state 30


State 24

   12 func_def_decl_args_list: type_var_list .
   20 type_var_list: type_var_list . ',' return_type NAME

    ','  shift, and go to state 31

    $default  reduce using rule 12 (func_def_decl_args_list)


State 25

   10 function_declaration: return_type NAME '(' type_list . ')' ';'
   22 type_list: type_list . ',' return_type

    ')'  shift, and go to state 32
    ','  shift, and go to state 33


State 26

   21 type_var_list: return_type . NAME
   23 type_list: return_type .

    NAME  shift, and go to state 34

    $default  reduce using rule 23 (type_list)


State 27

   31 variable_list: variable_list ',' NAME .

    $default  reduce using rule 31 (variable_list)


State 28

    8 function_definition: return_type NAME '(' func_def_decl_args_list . ')' '{' $@1 variable_declaration_list statement_list '}'

    ')'  shift, and go to state 35


State 29

   21 type_var_list: return_type . NAME

    NAME  shift, and go to state 34


State 30

    8 function_definition: return_type NAME '(' func_def_decl_args_list ')' . '{' $@1 variable_declaration_list statement_list '}'
    9 function_declaration: return_type NAME '(' func_def_decl_args_list ')' . ';'

    '{'  shift, and go to state 36
    ';'  shift, and go to state 37


State 31

   20 type_var_list: type_var_list ',' . return_type NAME

    INTEGER  shift, and go to state 1
    FLOAT    shift, and go to state 2
    VOID     shift, and go to state 3

    return_type  go to state 38


State 32

   10 function_declaration: return_type NAME '(' type_list ')' . ';'

    ';'  shift, and go to state 39


State 33

   22 type_list: type_list ',' . return_type

    INTEGER  shift, and go to state 1
    FLOAT    shift, and go to state 2
    VOID     shift, and go to state 3

    return_type  go to state 40


State 34

   21 type_var_list: return_type NAME .

    $default  reduce using rule 21 (type_var_list)


State 35

    8 function_definition: return_type NAME '(' func_def_decl_args_list ')' . '{' $@1 variable_declaration_list statement_list '}'

    '{'  shift, and go to state 36


State 36

    8 function_definition: return_type NAME '(' func_def_decl_args_list ')' '{' . $@1 variable_declaration_list statement_list '}'

    $default  reduce using rule 7 ($@1)

    $@1  go to state 41


State 37

    9 function_declaration: return_type NAME '(' func_def_decl_args_list ')' ';' .

    $default  reduce using rule 9 (function_declaration)


State 38

   20 type_var_list: type_var_list ',' return_type . NAME

    NAME  shift, and go to state 42


State 39

   10 function_declaration: return_type NAME '(' type_list ')' ';' .

    $default  reduce using rule 10 (function_declaration)


State 40

   22 type_list: type_list ',' return_type .

    $default  reduce using rule 22 (type_list)


State 41

    8 function_definition: return_type NAME '(' func_def_decl_args_list ')' '{' $@1 . variable_declaration_list statement_list '}'

    $default  reduce using rule 28 (variable_declaration_list)

    variable_declaration_list  go to state 43


State 42

   20 type_var_list: type_var_list ',' return_type NAME .

    $default  reduce using rule 20 (type_var_list)


State 43

    8 function_definition: return_type NAME '(' func_def_decl_args_list ')' '{' $@1 variable_declaration_list . statement_list '}'
   27 variable_declaration_list: variable_declaration_list . variable_declaration

    INTEGER  shift, and go to state 1
    FLOAT    shift, and go to state 2
    VOID     shift, and go to state 3

    $default  reduce using rule 32 (statement_list)

    return_type           go to state 44
    variable_declaration  go to state 45
    statement_list        go to state 46


State 44

   29 variable_declaration: return_type . variable_list ';'

    NAME  shift, and go to state 47

    variable_list  go to state 16


State 45

   27 variable_declaration_list: variable_declaration_list variable_declaration .

    $default  reduce using rule 27 (variable_declaration_list)


State 46

    8 function_definition: return_type NAME '(' func_def_decl_args_list ')' '{' $@1 variable_declaration_list statement_list . '}'
   33 statement_list: statement_list . single_stmt

    NAME    shift, and go to state 48
    RETURN  shift, and go to state 49
    WHILE   shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    PRINT   shift, and go to state 53
    '{'     shift, and go to state 54
    '}'     shift, and go to state 55

    function_call         go to state 56
    single_stmt           go to state 57
    assignment_statement  go to state 58
    variable              go to state 59
    if_stmt               go to state 60
    while_stmt            go to state 61
    do_while_stmt         go to state 62
    print_stmt            go to state 63
    sequence_list         go to state 64
    return_stmt           go to state 65


State 47

   30 variable_list: NAME .

    $default  reduce using rule 30 (variable_list)


State 48

   13 function_call: NAME . '(' func_call_args_list ')' ';'
   53 variable: NAME .

    '('  shift, and go to state 66

    $default  reduce using rule 53 (variable)


State 49

   73 return_stmt: RETURN . expression ';'
   74            | RETURN . ';'

    INTEGER_NUMBER  shift, and go to state 67
    DOUBLE_NUMBER   shift, and go to state 68
    NAME            shift, and go to state 69
    NOT             shift, and go to state 70
    '-'             shift, and go to state 71
    '('             shift, and go to state 72
    ';'             shift, and go to state 73

    expression       go to state 74
    variable         go to state 75
    constant         go to state 76
    logical_expr     go to state 77
    relational_expr  go to state 78


State 50

   58 while_stmt: WHILE . '(' logical_expr ')' single_stmt

    '('  shift, and go to state 79


State 51

   56 if_stmt: IF . '(' logical_expr ')' single_stmt
   57        | IF . '(' logical_expr ')' single_stmt ELSE single_stmt

    '('  shift, and go to state 80


State 52

   59 do_while_stmt: DO . single_stmt WHILE '(' logical_expr ')' ';'

    NAME    shift, and go to state 48
    RETURN  shift, and go to state 49
    WHILE   shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    PRINT   shift, and go to state 53
    '{'     shift, and go to state 54

    function_call         go to state 56
    single_stmt           go to state 81
    assignment_statement  go to state 58
    variable              go to state 59
    if_stmt               go to state 60
    while_stmt            go to state 61
    do_while_stmt         go to state 62
    print_stmt            go to state 63
    sequence_list         go to state 64
    return_stmt           go to state 65


State 53

   60 print_stmt: PRINT . variable ';'

    NAME  shift, and go to state 69

    variable  go to state 82


State 54

   72 sequence_list: '{' . statement_list '}'

    $default  reduce using rule 32 (statement_list)

    statement_list  go to state 83


State 55

    8 function_definition: return_type NAME '(' func_def_decl_args_list ')' '{' $@1 variable_declaration_list statement_list '}' .

    $default  reduce using rule 8 (function_definition)


State 56

   40 single_stmt: function_call .

    $default  reduce using rule 40 (single_stmt)


State 57

   33 statement_list: statement_list single_stmt .

    $default  reduce using rule 33 (statement_list)


State 58

   34 single_stmt: assignment_statement .

    $default  reduce using rule 34 (single_stmt)


State 59

   42 assignment_statement: variable . ASSIGN expression ';'
   43                     | variable . ASSIGN function_call

    ASSIGN  shift, and go to state 84


State 60

   35 single_stmt: if_stmt .

    $default  reduce using rule 35 (single_stmt)


State 61

   36 single_stmt: while_stmt .

    $default  reduce using rule 36 (single_stmt)


State 62

   37 single_stmt: do_while_stmt .

    $default  reduce using rule 37 (single_stmt)


State 63

   39 single_stmt: print_stmt .

    $default  reduce using rule 39 (single_stmt)


State 64

   38 single_stmt: sequence_list .

    $default  reduce using rule 38 (single_stmt)


State 65

   41 single_stmt: return_stmt .

    $default  reduce using rule 41 (single_stmt)


State 66

   13 function_call: NAME '(' . func_call_args_list ')' ';'

    INTEGER_NUMBER  shift, and go to state 67
    DOUBLE_NUMBER   shift, and go to state 68
    NAME            shift, and go to state 69

    $default  reduce using rule 15 (func_call_args_list)

    func_call_args_list   go to state 85
    func_call_args_list1  go to state 86
    func_arg              go to state 87
    variable              go to state 88
    constant              go to state 89


State 67

   54 constant: INTEGER_NUMBER .

    $default  reduce using rule 54 (constant)


State 68

   55 constant: DOUBLE_NUMBER .

    $default  reduce using rule 55 (constant)


State 69

   53 variable: NAME .

    $default  reduce using rule 53 (variable)


State 70

   63 logical_expr: NOT . logical_expr

    INTEGER_NUMBER  shift, and go to state 67
    DOUBLE_NUMBER   shift, and go to state 68
    NAME            shift, and go to state 69
    NOT             shift, and go to state 70
    '-'             shift, and go to state 71
    '('             shift, and go to state 72

    expression       go to state 90
    variable         go to state 75
    constant         go to state 76
    logical_expr     go to state 91
    relational_expr  go to state 78


State 71

   51 expression: '-' . expression

    INTEGER_NUMBER  shift, and go to state 67
    DOUBLE_NUMBER   shift, and go to state 68
    NAME            shift, and go to state 69
    NOT             shift, and go to state 70
    '-'             shift, and go to state 71
    '('             shift, and go to state 72

    expression       go to state 92
    variable         go to state 75
    constant         go to state 76
    logical_expr     go to state 77
    relational_expr  go to state 78


State 72

   50 expression: '(' . expression ')'
   64 logical_expr: '(' . logical_expr ')'

    INTEGER_NUMBER  shift, and go to state 67
    DOUBLE_NUMBER   shift, and go to state 68
    NAME            shift, and go to state 69
    NOT             shift, and go to state 70
    '-'             shift, and go to state 71
    '('             shift, and go to state 72

    expression       go to state 93
    variable         go to state 75
    constant         go to state 76
    logical_expr     go to state 94
    relational_expr  go to state 78


State 73

   74 return_stmt: RETURN ';' .

    $default  reduce using rule 74 (return_stmt)


State 74

   44 expression: expression . '*' expression
   45           | expression . '/' expression
   46           | expression . '+' expression
   47           | expression . '-' expression
   66 relational_expr: expression . LESS_THAN expression
   67                | expression . LESS_THAN_EQUAL expression
   68                | expression . GREATER_THAN expression
   69                | expression . GREATER_THAN_EQUAL expression
   70                | expression . EQUAL expression
   71                | expression . NOT_EQUAL expression
   73 return_stmt: RETURN expression . ';'

    GREATER_THAN        shift, and go to state 95
    NOT_EQUAL           shift, and go to state 96
    LESS_THAN           shift, and go to state 97
    LESS_THAN_EQUAL     shift, and go to state 98
    EQUAL               shift, and go to state 99
    GREATER_THAN_EQUAL  shift, and go to state 100
    '+'                 shift, and go to state 101
    '-'                 shift, and go to state 102
    '*'                 shift, and go to state 103
    '/'                 shift, and go to state 104
    ';'                 shift, and go to state 105


State 75

   48 expression: variable .

    $default  reduce using rule 48 (expression)


State 76

   49 expression: constant .

    $default  reduce using rule 49 (expression)


State 77

   52 expression: logical_expr . '?' expression ':' expression
   61 logical_expr: logical_expr . AND logical_expr
   62             | logical_expr . OR logical_expr

    AND  shift, and go to state 106
    OR   shift, and go to state 107
    '?'  shift, and go to state 108


State 78

   65 logical_expr: relational_expr .

    $default  reduce using rule 65 (logical_expr)


State 79

   58 while_stmt: WHILE '(' . logical_expr ')' single_stmt

    INTEGER_NUMBER  shift, and go to state 67
    DOUBLE_NUMBER   shift, and go to state 68
    NAME            shift, and go to state 69
    NOT             shift, and go to state 70
    '-'             shift, and go to state 71
    '('             shift, and go to state 72

    expression       go to state 90
    variable         go to state 75
    constant         go to state 76
    logical_expr     go to state 109
    relational_expr  go to state 78


State 80

   56 if_stmt: IF '(' . logical_expr ')' single_stmt
   57        | IF '(' . logical_expr ')' single_stmt ELSE single_stmt

    INTEGER_NUMBER  shift, and go to state 67
    DOUBLE_NUMBER   shift, and go to state 68
    NAME            shift, and go to state 69
    NOT             shift, and go to state 70
    '-'             shift, and go to state 71
    '('             shift, and go to state 72

    expression       go to state 90
    variable         go to state 75
    constant         go to state 76
    logical_expr     go to state 110
    relational_expr  go to state 78


State 81

   59 do_while_stmt: DO single_stmt . WHILE '(' logical_expr ')' ';'

    WHILE  shift, and go to state 111


State 82

   60 print_stmt: PRINT variable . ';'

    ';'  shift, and go to state 112


State 83

   33 statement_list: statement_list . single_stmt
   72 sequence_list: '{' statement_list . '}'

    NAME    shift, and go to state 48
    RETURN  shift, and go to state 49
    WHILE   shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    PRINT   shift, and go to state 53
    '{'     shift, and go to state 54
    '}'     shift, and go to state 113

    function_call         go to state 56
    single_stmt           go to state 57
    assignment_statement  go to state 58
    variable              go to state 59
    if_stmt               go to state 60
    while_stmt            go to state 61
    do_while_stmt         go to state 62
    print_stmt            go to state 63
    sequence_list         go to state 64
    return_stmt           go to state 65


State 84

   42 assignment_statement: variable ASSIGN . expression ';'
   43                     | variable ASSIGN . function_call

    INTEGER_NUMBER  shift, and go to state 67
    DOUBLE_NUMBER   shift, and go to state 68
    NAME            shift, and go to state 48
    NOT             shift, and go to state 70
    '-'             shift, and go to state 71
    '('             shift, and go to state 72

    function_call    go to state 114
    expression       go to state 115
    variable         go to state 75
    constant         go to state 76
    logical_expr     go to state 77
    relational_expr  go to state 78


State 85

   13 function_call: NAME '(' func_call_args_list . ')' ';'

    ')'  shift, and go to state 116


State 86

   14 func_call_args_list: func_call_args_list1 .

    $default  reduce using rule 14 (func_call_args_list)


State 87

   16 func_call_args_list1: func_arg . ',' func_call_args_list1
   17                     | func_arg .

    ','  shift, and go to state 117

    $default  reduce using rule 17 (func_call_args_list1)


State 88

   18 func_arg: variable .

    $default  reduce using rule 18 (func_arg)


State 89

   19 func_arg: constant .

    $default  reduce using rule 19 (func_arg)


State 90

   44 expression: expression . '*' expression
   45           | expression . '/' expression
   46           | expression . '+' expression
   47           | expression . '-' expression
   66 relational_expr: expression . LESS_THAN expression
   67                | expression . LESS_THAN_EQUAL expression
   68                | expression . GREATER_THAN expression
   69                | expression . GREATER_THAN_EQUAL expression
   70                | expression . EQUAL expression
   71                | expression . NOT_EQUAL expression

    GREATER_THAN        shift, and go to state 95
    NOT_EQUAL           shift, and go to state 96
    LESS_THAN           shift, and go to state 97
    LESS_THAN_EQUAL     shift, and go to state 98
    EQUAL               shift, and go to state 99
    GREATER_THAN_EQUAL  shift, and go to state 100
    '+'                 shift, and go to state 101
    '-'                 shift, and go to state 102
    '*'                 shift, and go to state 103
    '/'                 shift, and go to state 104


State 91

   52 expression: logical_expr . '?' expression ':' expression
   61 logical_expr: logical_expr . AND logical_expr
   62             | logical_expr . OR logical_expr
   63             | NOT logical_expr .

    $default  reduce using rule 63 (logical_expr)


State 92

   44 expression: expression . '*' expression
   45           | expression . '/' expression
   46           | expression . '+' expression
   47           | expression . '-' expression
   51           | '-' expression .
   66 relational_expr: expression . LESS_THAN expression
   67                | expression . LESS_THAN_EQUAL expression
   68                | expression . GREATER_THAN expression
   69                | expression . GREATER_THAN_EQUAL expression
   70                | expression . EQUAL expression
   71                | expression . NOT_EQUAL expression

    $default  reduce using rule 51 (expression)


State 93

   44 expression: expression . '*' expression
   45           | expression . '/' expression
   46           | expression . '+' expression
   47           | expression . '-' expression
   50           | '(' expression . ')'
   66 relational_expr: expression . LESS_THAN expression
   67                | expression . LESS_THAN_EQUAL expression
   68                | expression . GREATER_THAN expression
   69                | expression . GREATER_THAN_EQUAL expression
   70                | expression . EQUAL expression
   71                | expression . NOT_EQUAL expression

    GREATER_THAN        shift, and go to state 95
    NOT_EQUAL           shift, and go to state 96
    LESS_THAN           shift, and go to state 97
    LESS_THAN_EQUAL     shift, and go to state 98
    EQUAL               shift, and go to state 99
    GREATER_THAN_EQUAL  shift, and go to state 100
    '+'                 shift, and go to state 101
    '-'                 shift, and go to state 102
    '*'                 shift, and go to state 103
    '/'                 shift, and go to state 104
    ')'                 shift, and go to state 118


State 94

   52 expression: logical_expr . '?' expression ':' expression
   61 logical_expr: logical_expr . AND logical_expr
   62             | logical_expr . OR logical_expr
   64             | '(' logical_expr . ')'

    AND  shift, and go to state 106
    OR   shift, and go to state 107
    '?'  shift, and go to state 108
    ')'  shift, and go to state 119


State 95

   68 relational_expr: expression GREATER_THAN . expression

    INTEGER_NUMBER  shift, and go to state 67
    DOUBLE_NUMBER   shift, and go to state 68
    NAME            shift, and go to state 69
    NOT             shift, and go to state 70
    '-'             shift, and go to state 71
    '('             shift, and go to state 72

    expression       go to state 120
    variable         go to state 75
    constant         go to state 76
    logical_expr     go to state 77
    relational_expr  go to state 78


State 96

   71 relational_expr: expression NOT_EQUAL . expression

    INTEGER_NUMBER  shift, and go to state 67
    DOUBLE_NUMBER   shift, and go to state 68
    NAME            shift, and go to state 69
    NOT             shift, and go to state 70
    '-'             shift, and go to state 71
    '('             shift, and go to state 72

    expression       go to state 121
    variable         go to state 75
    constant         go to state 76
    logical_expr     go to state 77
    relational_expr  go to state 78


State 97

   66 relational_expr: expression LESS_THAN . expression

    INTEGER_NUMBER  shift, and go to state 67
    DOUBLE_NUMBER   shift, and go to state 68
    NAME            shift, and go to state 69
    NOT             shift, and go to state 70
    '-'             shift, and go to state 71
    '('             shift, and go to state 72

    expression       go to state 122
    variable         go to state 75
    constant         go to state 76
    logical_expr     go to state 77
    relational_expr  go to state 78


State 98

   67 relational_expr: expression LESS_THAN_EQUAL . expression

    INTEGER_NUMBER  shift, and go to state 67
    DOUBLE_NUMBER   shift, and go to state 68
    NAME            shift, and go to state 69
    NOT             shift, and go to state 70
    '-'             shift, and go to state 71
    '('             shift, and go to state 72

    expression       go to state 123
    variable         go to state 75
    constant         go to state 76
    logical_expr     go to state 77
    relational_expr  go to state 78


State 99

   70 relational_expr: expression EQUAL . expression

    INTEGER_NUMBER  shift, and go to state 67
    DOUBLE_NUMBER   shift, and go to state 68
    NAME            shift, and go to state 69
    NOT             shift, and go to state 70
    '-'             shift, and go to state 71
    '('             shift, and go to state 72

    expression       go to state 124
    variable         go to state 75
    constant         go to state 76
    logical_expr     go to state 77
    relational_expr  go to state 78


State 100

   69 relational_expr: expression GREATER_THAN_EQUAL . expression

    INTEGER_NUMBER  shift, and go to state 67
    DOUBLE_NUMBER   shift, and go to state 68
    NAME            shift, and go to state 69
    NOT             shift, and go to state 70
    '-'             shift, and go to state 71
    '('             shift, and go to state 72

    expression       go to state 125
    variable         go to state 75
    constant         go to state 76
    logical_expr     go to state 77
    relational_expr  go to state 78


State 101

   46 expression: expression '+' . expression

    INTEGER_NUMBER  shift, and go to state 67
    DOUBLE_NUMBER   shift, and go to state 68
    NAME            shift, and go to state 69
    NOT             shift, and go to state 70
    '-'             shift, and go to state 71
    '('             shift, and go to state 72

    expression       go to state 126
    variable         go to state 75
    constant         go to state 76
    logical_expr     go to state 77
    relational_expr  go to state 78


State 102

   47 expression: expression '-' . expression

    INTEGER_NUMBER  shift, and go to state 67
    DOUBLE_NUMBER   shift, and go to state 68
    NAME            shift, and go to state 69
    NOT             shift, and go to state 70
    '-'             shift, and go to state 71
    '('             shift, and go to state 72

    expression       go to state 127
    variable         go to state 75
    constant         go to state 76
    logical_expr     go to state 77
    relational_expr  go to state 78


State 103

   44 expression: expression '*' . expression

    INTEGER_NUMBER  shift, and go to state 67
    DOUBLE_NUMBER   shift, and go to state 68
    NAME            shift, and go to state 69
    NOT             shift, and go to state 70
    '-'             shift, and go to state 71
    '('             shift, and go to state 72

    expression       go to state 128
    variable         go to state 75
    constant         go to state 76
    logical_expr     go to state 77
    relational_expr  go to state 78


State 104

   45 expression: expression '/' . expression

    INTEGER_NUMBER  shift, and go to state 67
    DOUBLE_NUMBER   shift, and go to state 68
    NAME            shift, and go to state 69
    NOT             shift, and go to state 70
    '-'             shift, and go to state 71
    '('             shift, and go to state 72

    expression       go to state 129
    variable         go to state 75
    constant         go to state 76
    logical_expr     go to state 77
    relational_expr  go to state 78


State 105

   73 return_stmt: RETURN expression ';' .

    $default  reduce using rule 73 (return_stmt)


State 106

   61 logical_expr: logical_expr AND . logical_expr

    INTEGER_NUMBER  shift, and go to state 67
    DOUBLE_NUMBER   shift, and go to state 68
    NAME            shift, and go to state 69
    NOT             shift, and go to state 70
    '-'             shift, and go to state 71
    '('             shift, and go to state 72

    expression       go to state 90
    variable         go to state 75
    constant         go to state 76
    logical_expr     go to state 130
    relational_expr  go to state 78


State 107

   62 logical_expr: logical_expr OR . logical_expr

    INTEGER_NUMBER  shift, and go to state 67
    DOUBLE_NUMBER   shift, and go to state 68
    NAME            shift, and go to state 69
    NOT             shift, and go to state 70
    '-'             shift, and go to state 71
    '('             shift, and go to state 72

    expression       go to state 90
    variable         go to state 75
    constant         go to state 76
    logical_expr     go to state 131
    relational_expr  go to state 78


State 108

   52 expression: logical_expr '?' . expression ':' expression

    INTEGER_NUMBER  shift, and go to state 67
    DOUBLE_NUMBER   shift, and go to state 68
    NAME            shift, and go to state 69
    NOT             shift, and go to state 70
    '-'             shift, and go to state 71
    '('             shift, and go to state 72

    expression       go to state 132
    variable         go to state 75
    constant         go to state 76
    logical_expr     go to state 77
    relational_expr  go to state 78


State 109

   52 expression: logical_expr . '?' expression ':' expression
   58 while_stmt: WHILE '(' logical_expr . ')' single_stmt
   61 logical_expr: logical_expr . AND logical_expr
   62             | logical_expr . OR logical_expr

    AND  shift, and go to state 106
    OR   shift, and go to state 107
    '?'  shift, and go to state 108
    ')'  shift, and go to state 133


State 110

   52 expression: logical_expr . '?' expression ':' expression
   56 if_stmt: IF '(' logical_expr . ')' single_stmt
   57        | IF '(' logical_expr . ')' single_stmt ELSE single_stmt
   61 logical_expr: logical_expr . AND logical_expr
   62             | logical_expr . OR logical_expr

    AND  shift, and go to state 106
    OR   shift, and go to state 107
    '?'  shift, and go to state 108
    ')'  shift, and go to state 134


State 111

   59 do_while_stmt: DO single_stmt WHILE . '(' logical_expr ')' ';'

    '('  shift, and go to state 135


State 112

   60 print_stmt: PRINT variable ';' .

    $default  reduce using rule 60 (print_stmt)


State 113

   72 sequence_list: '{' statement_list '}' .

    $default  reduce using rule 72 (sequence_list)


State 114

   43 assignment_statement: variable ASSIGN function_call .

    $default  reduce using rule 43 (assignment_statement)


State 115

   42 assignment_statement: variable ASSIGN expression . ';'
   44 expression: expression . '*' expression
   45           | expression . '/' expression
   46           | expression . '+' expression
   47           | expression . '-' expression
   66 relational_expr: expression . LESS_THAN expression
   67                | expression . LESS_THAN_EQUAL expression
   68                | expression . GREATER_THAN expression
   69                | expression . GREATER_THAN_EQUAL expression
   70                | expression . EQUAL expression
   71                | expression . NOT_EQUAL expression

    GREATER_THAN        shift, and go to state 95
    NOT_EQUAL           shift, and go to state 96
    LESS_THAN           shift, and go to state 97
    LESS_THAN_EQUAL     shift, and go to state 98
    EQUAL               shift, and go to state 99
    GREATER_THAN_EQUAL  shift, and go to state 100
    '+'                 shift, and go to state 101
    '-'                 shift, and go to state 102
    '*'                 shift, and go to state 103
    '/'                 shift, and go to state 104
    ';'                 shift, and go to state 136


State 116

   13 function_call: NAME '(' func_call_args_list ')' . ';'

    ';'  shift, and go to state 137


State 117

   16 func_call_args_list1: func_arg ',' . func_call_args_list1

    INTEGER_NUMBER  shift, and go to state 67
    DOUBLE_NUMBER   shift, and go to state 68
    NAME            shift, and go to state 69

    func_call_args_list1  go to state 138
    func_arg              go to state 87
    variable              go to state 88
    constant              go to state 89


State 118

   50 expression: '(' expression ')' .

    $default  reduce using rule 50 (expression)


State 119

   64 logical_expr: '(' logical_expr ')' .

    $default  reduce using rule 64 (logical_expr)


State 120

   44 expression: expression . '*' expression
   45           | expression . '/' expression
   46           | expression . '+' expression
   47           | expression . '-' expression
   66 relational_expr: expression . LESS_THAN expression
   67                | expression . LESS_THAN_EQUAL expression
   68                | expression . GREATER_THAN expression
   68                | expression GREATER_THAN expression .
   69                | expression . GREATER_THAN_EQUAL expression
   70                | expression . EQUAL expression
   71                | expression . NOT_EQUAL expression

    GREATER_THAN        shift, and go to state 95
    NOT_EQUAL           shift, and go to state 96
    LESS_THAN           shift, and go to state 97
    LESS_THAN_EQUAL     shift, and go to state 98
    EQUAL               shift, and go to state 99
    GREATER_THAN_EQUAL  shift, and go to state 100
    '+'                 shift, and go to state 101
    '-'                 shift, and go to state 102
    '*'                 shift, and go to state 103
    '/'                 shift, and go to state 104

    $default  reduce using rule 68 (relational_expr)


State 121

   44 expression: expression . '*' expression
   45           | expression . '/' expression
   46           | expression . '+' expression
   47           | expression . '-' expression
   66 relational_expr: expression . LESS_THAN expression
   67                | expression . LESS_THAN_EQUAL expression
   68                | expression . GREATER_THAN expression
   69                | expression . GREATER_THAN_EQUAL expression
   70                | expression . EQUAL expression
   71                | expression . NOT_EQUAL expression
   71                | expression NOT_EQUAL expression .

    GREATER_THAN        shift, and go to state 95
    NOT_EQUAL           shift, and go to state 96
    LESS_THAN           shift, and go to state 97
    LESS_THAN_EQUAL     shift, and go to state 98
    EQUAL               shift, and go to state 99
    GREATER_THAN_EQUAL  shift, and go to state 100
    '+'                 shift, and go to state 101
    '-'                 shift, and go to state 102
    '*'                 shift, and go to state 103
    '/'                 shift, and go to state 104

    $default  reduce using rule 71 (relational_expr)


State 122

   44 expression: expression . '*' expression
   45           | expression . '/' expression
   46           | expression . '+' expression
   47           | expression . '-' expression
   66 relational_expr: expression . LESS_THAN expression
   66                | expression LESS_THAN expression .
   67                | expression . LESS_THAN_EQUAL expression
   68                | expression . GREATER_THAN expression
   69                | expression . GREATER_THAN_EQUAL expression
   70                | expression . EQUAL expression
   71                | expression . NOT_EQUAL expression

    GREATER_THAN        shift, and go to state 95
    NOT_EQUAL           shift, and go to state 96
    LESS_THAN           shift, and go to state 97
    LESS_THAN_EQUAL     shift, and go to state 98
    EQUAL               shift, and go to state 99
    GREATER_THAN_EQUAL  shift, and go to state 100
    '+'                 shift, and go to state 101
    '-'                 shift, and go to state 102
    '*'                 shift, and go to state 103
    '/'                 shift, and go to state 104

    $default  reduce using rule 66 (relational_expr)


State 123

   44 expression: expression . '*' expression
   45           | expression . '/' expression
   46           | expression . '+' expression
   47           | expression . '-' expression
   66 relational_expr: expression . LESS_THAN expression
   67                | expression . LESS_THAN_EQUAL expression
   67                | expression LESS_THAN_EQUAL expression .
   68                | expression . GREATER_THAN expression
   69                | expression . GREATER_THAN_EQUAL expression
   70                | expression . EQUAL expression
   71                | expression . NOT_EQUAL expression

    GREATER_THAN        shift, and go to state 95
    NOT_EQUAL           shift, and go to state 96
    LESS_THAN           shift, and go to state 97
    LESS_THAN_EQUAL     shift, and go to state 98
    EQUAL               shift, and go to state 99
    GREATER_THAN_EQUAL  shift, and go to state 100
    '+'                 shift, and go to state 101
    '-'                 shift, and go to state 102
    '*'                 shift, and go to state 103
    '/'                 shift, and go to state 104

    $default  reduce using rule 67 (relational_expr)


State 124

   44 expression: expression . '*' expression
   45           | expression . '/' expression
   46           | expression . '+' expression
   47           | expression . '-' expression
   66 relational_expr: expression . LESS_THAN expression
   67                | expression . LESS_THAN_EQUAL expression
   68                | expression . GREATER_THAN expression
   69                | expression . GREATER_THAN_EQUAL expression
   70                | expression . EQUAL expression
   70                | expression EQUAL expression .
   71                | expression . NOT_EQUAL expression

    GREATER_THAN        shift, and go to state 95
    NOT_EQUAL           shift, and go to state 96
    LESS_THAN           shift, and go to state 97
    LESS_THAN_EQUAL     shift, and go to state 98
    EQUAL               shift, and go to state 99
    GREATER_THAN_EQUAL  shift, and go to state 100
    '+'                 shift, and go to state 101
    '-'                 shift, and go to state 102
    '*'                 shift, and go to state 103
    '/'                 shift, and go to state 104

    $default  reduce using rule 70 (relational_expr)


State 125

   44 expression: expression . '*' expression
   45           | expression . '/' expression
   46           | expression . '+' expression
   47           | expression . '-' expression
   66 relational_expr: expression . LESS_THAN expression
   67                | expression . LESS_THAN_EQUAL expression
   68                | expression . GREATER_THAN expression
   69                | expression . GREATER_THAN_EQUAL expression
   69                | expression GREATER_THAN_EQUAL expression .
   70                | expression . EQUAL expression
   71                | expression . NOT_EQUAL expression

    GREATER_THAN        shift, and go to state 95
    NOT_EQUAL           shift, and go to state 96
    LESS_THAN           shift, and go to state 97
    LESS_THAN_EQUAL     shift, and go to state 98
    EQUAL               shift, and go to state 99
    GREATER_THAN_EQUAL  shift, and go to state 100
    '+'                 shift, and go to state 101
    '-'                 shift, and go to state 102
    '*'                 shift, and go to state 103
    '/'                 shift, and go to state 104

    $default  reduce using rule 69 (relational_expr)


State 126

   44 expression: expression . '*' expression
   45           | expression . '/' expression
   46           | expression . '+' expression
   46           | expression '+' expression .
   47           | expression . '-' expression
   66 relational_expr: expression . LESS_THAN expression
   67                | expression . LESS_THAN_EQUAL expression
   68                | expression . GREATER_THAN expression
   69                | expression . GREATER_THAN_EQUAL expression
   70                | expression . EQUAL expression
   71                | expression . NOT_EQUAL expression

    '*'  shift, and go to state 103
    '/'  shift, and go to state 104

    $default  reduce using rule 46 (expression)


State 127

   44 expression: expression . '*' expression
   45           | expression . '/' expression
   46           | expression . '+' expression
   47           | expression . '-' expression
   47           | expression '-' expression .
   66 relational_expr: expression . LESS_THAN expression
   67                | expression . LESS_THAN_EQUAL expression
   68                | expression . GREATER_THAN expression
   69                | expression . GREATER_THAN_EQUAL expression
   70                | expression . EQUAL expression
   71                | expression . NOT_EQUAL expression

    '*'  shift, and go to state 103
    '/'  shift, and go to state 104

    $default  reduce using rule 47 (expression)


State 128

   44 expression: expression . '*' expression
   44           | expression '*' expression .
   45           | expression . '/' expression
   46           | expression . '+' expression
   47           | expression . '-' expression
   66 relational_expr: expression . LESS_THAN expression
   67                | expression . LESS_THAN_EQUAL expression
   68                | expression . GREATER_THAN expression
   69                | expression . GREATER_THAN_EQUAL expression
   70                | expression . EQUAL expression
   71                | expression . NOT_EQUAL expression

    $default  reduce using rule 44 (expression)


State 129

   44 expression: expression . '*' expression
   45           | expression . '/' expression
   45           | expression '/' expression .
   46           | expression . '+' expression
   47           | expression . '-' expression
   66 relational_expr: expression . LESS_THAN expression
   67                | expression . LESS_THAN_EQUAL expression
   68                | expression . GREATER_THAN expression
   69                | expression . GREATER_THAN_EQUAL expression
   70                | expression . EQUAL expression
   71                | expression . NOT_EQUAL expression

    $default  reduce using rule 45 (expression)


State 130

   52 expression: logical_expr . '?' expression ':' expression
   61 logical_expr: logical_expr . AND logical_expr
   61             | logical_expr AND logical_expr .
   62             | logical_expr . OR logical_expr

    $default  reduce using rule 61 (logical_expr)


State 131

   52 expression: logical_expr . '?' expression ':' expression
   61 logical_expr: logical_expr . AND logical_expr
   62             | logical_expr . OR logical_expr
   62             | logical_expr OR logical_expr .

    AND  shift, and go to state 106

    $default  reduce using rule 62 (logical_expr)


State 132

   44 expression: expression . '*' expression
   45           | expression . '/' expression
   46           | expression . '+' expression
   47           | expression . '-' expression
   52           | logical_expr '?' expression . ':' expression
   66 relational_expr: expression . LESS_THAN expression
   67                | expression . LESS_THAN_EQUAL expression
   68                | expression . GREATER_THAN expression
   69                | expression . GREATER_THAN_EQUAL expression
   70                | expression . EQUAL expression
   71                | expression . NOT_EQUAL expression

    GREATER_THAN        shift, and go to state 95
    NOT_EQUAL           shift, and go to state 96
    LESS_THAN           shift, and go to state 97
    LESS_THAN_EQUAL     shift, and go to state 98
    EQUAL               shift, and go to state 99
    GREATER_THAN_EQUAL  shift, and go to state 100
    ':'                 shift, and go to state 139
    '+'                 shift, and go to state 101
    '-'                 shift, and go to state 102
    '*'                 shift, and go to state 103
    '/'                 shift, and go to state 104


State 133

   58 while_stmt: WHILE '(' logical_expr ')' . single_stmt

    NAME    shift, and go to state 48
    RETURN  shift, and go to state 49
    WHILE   shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    PRINT   shift, and go to state 53
    '{'     shift, and go to state 54

    function_call         go to state 56
    single_stmt           go to state 140
    assignment_statement  go to state 58
    variable              go to state 59
    if_stmt               go to state 60
    while_stmt            go to state 61
    do_while_stmt         go to state 62
    print_stmt            go to state 63
    sequence_list         go to state 64
    return_stmt           go to state 65


State 134

   56 if_stmt: IF '(' logical_expr ')' . single_stmt
   57        | IF '(' logical_expr ')' . single_stmt ELSE single_stmt

    NAME    shift, and go to state 48
    RETURN  shift, and go to state 49
    WHILE   shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    PRINT   shift, and go to state 53
    '{'     shift, and go to state 54

    function_call         go to state 56
    single_stmt           go to state 141
    assignment_statement  go to state 58
    variable              go to state 59
    if_stmt               go to state 60
    while_stmt            go to state 61
    do_while_stmt         go to state 62
    print_stmt            go to state 63
    sequence_list         go to state 64
    return_stmt           go to state 65


State 135

   59 do_while_stmt: DO single_stmt WHILE '(' . logical_expr ')' ';'

    INTEGER_NUMBER  shift, and go to state 67
    DOUBLE_NUMBER   shift, and go to state 68
    NAME            shift, and go to state 69
    NOT             shift, and go to state 70
    '-'             shift, and go to state 71
    '('             shift, and go to state 72

    expression       go to state 90
    variable         go to state 75
    constant         go to state 76
    logical_expr     go to state 142
    relational_expr  go to state 78


State 136

   42 assignment_statement: variable ASSIGN expression ';' .

    $default  reduce using rule 42 (assignment_statement)


State 137

   13 function_call: NAME '(' func_call_args_list ')' ';' .

    $default  reduce using rule 13 (function_call)


State 138

   16 func_call_args_list1: func_arg ',' func_call_args_list1 .

    $default  reduce using rule 16 (func_call_args_list1)


State 139

   52 expression: logical_expr '?' expression ':' . expression

    INTEGER_NUMBER  shift, and go to state 67
    DOUBLE_NUMBER   shift, and go to state 68
    NAME            shift, and go to state 69
    NOT             shift, and go to state 70
    '-'             shift, and go to state 71
    '('             shift, and go to state 72

    expression       go to state 143
    variable         go to state 75
    constant         go to state 76
    logical_expr     go to state 77
    relational_expr  go to state 78


State 140

   58 while_stmt: WHILE '(' logical_expr ')' single_stmt .

    $default  reduce using rule 58 (while_stmt)


State 141

   56 if_stmt: IF '(' logical_expr ')' single_stmt .
   57        | IF '(' logical_expr ')' single_stmt . ELSE single_stmt

    ELSE  shift, and go to state 144

    $default  reduce using rule 56 (if_stmt)


State 142

   52 expression: logical_expr . '?' expression ':' expression
   59 do_while_stmt: DO single_stmt WHILE '(' logical_expr . ')' ';'
   61 logical_expr: logical_expr . AND logical_expr
   62             | logical_expr . OR logical_expr

    AND  shift, and go to state 106
    OR   shift, and go to state 107
    '?'  shift, and go to state 108
    ')'  shift, and go to state 145


State 143

   44 expression: expression . '*' expression
   45           | expression . '/' expression
   46           | expression . '+' expression
   47           | expression . '-' expression
   52           | logical_expr '?' expression ':' expression .
   66 relational_expr: expression . LESS_THAN expression
   67                | expression . LESS_THAN_EQUAL expression
   68                | expression . GREATER_THAN expression
   69                | expression . GREATER_THAN_EQUAL expression
   70                | expression . EQUAL expression
   71                | expression . NOT_EQUAL expression

    GREATER_THAN        shift, and go to state 95
    NOT_EQUAL           shift, and go to state 96
    LESS_THAN           shift, and go to state 97
    LESS_THAN_EQUAL     shift, and go to state 98
    EQUAL               shift, and go to state 99
    GREATER_THAN_EQUAL  shift, and go to state 100
    '+'                 shift, and go to state 101
    '-'                 shift, and go to state 102
    '*'                 shift, and go to state 103
    '/'                 shift, and go to state 104

    $default  reduce using rule 52 (expression)


State 144

   57 if_stmt: IF '(' logical_expr ')' single_stmt ELSE . single_stmt

    NAME    shift, and go to state 48
    RETURN  shift, and go to state 49
    WHILE   shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    PRINT   shift, and go to state 53
    '{'     shift, and go to state 54

    function_call         go to state 56
    single_stmt           go to state 146
    assignment_statement  go to state 58
    variable              go to state 59
    if_stmt               go to state 60
    while_stmt            go to state 61
    do_while_stmt         go to state 62
    print_stmt            go to state 63
    sequence_list         go to state 64
    return_stmt           go to state 65


State 145

   59 do_while_stmt: DO single_stmt WHILE '(' logical_expr ')' . ';'

    ';'  shift, and go to state 147


State 146

   57 if_stmt: IF '(' logical_expr ')' single_stmt ELSE single_stmt .

    $default  reduce using rule 57 (if_stmt)


State 147

   59 do_while_stmt: DO single_stmt WHILE '(' logical_expr ')' ';' .

    $default  reduce using rule 59 (do_while_stmt)
