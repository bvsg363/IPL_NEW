
	.data
x_:	.double 0.0
y_:	.word 0

	.text 			# The .text assembler directive indicates
	.globl main		# The following is the code (as oppose to data)
main:				# .globl makes main know to the 
				# outside of the program.
# Prologue begins 
	sw $ra, 0($sp)		# Save the return address
	sw $fp, -4($sp)		# Save the frame pointer
	sub $fp, $sp, 8		# Update the frame pointer

	sub $sp, $sp, 32		# Make space for the locals
# Prologue ends

	li $v0, 0
	sw $v0, 0($fp)
	li.d $f2, 1.00
	s.d $f2, -8($fp)
	li $v0, 2
	sw $v0, -4($fp)
	li.d $f2, 9.00
	s.d $f2, -16($fp)
	l.d $f2, -16($fp)
	s.d $f2, -8($fp)
	li $v0, 1
	li $t0, 1
	seq $t1, $v0, $t0
	beq $t1, $zero, label19 
	li $v0, 5
	sw $v0, 0($fp)

label19:    	
	li $v0, 2
	sw $v0, 0($fp)
	li $v0, 1
	li $t0, 2
	slt $t1, $v0, $t0
	beq $t1, $zero, label20 
	li $v0, 1
	lw $a0, 0($fp)
	syscall
	li $v0, 4
	sw $v0, 0($fp)

label20:    	
	li $v0, 1
	li $t0, 2
	slt $t1, $v0, $t0
	beq $t1, $zero, label21 
	li $v0, 3
	l.d $f12, -8($fp)
	syscall
	li $v0, 4
	sw $v0, 0($fp)

label21:    	
	li $v0, 3
	l.d $f12, -8($fp)
	syscall
	li $v0, 3
	l.d $f12, -8($fp)
	syscall
	li $v0, 1
	li $t0, 2
	slt $t1, $v0, $t0
	beq $t1, $zero, label22 
	li $v0, 1
	sw $v0, 0($fp)

label22:    	
	li $v0, 3
	l.d $f12, -8($fp)
	syscall
	l.d $f2, -8($fp)
	l.d $f4, -16($fp)
	c.lt.d $f2, $f4
	bc1f label23
	li.d $f2, 7.00
	s.d $f2, -8($fp)
	j label24

label23:    	
	li.d $f2, 2.00
	li.d $f4, 1.00
	c.le.d $f2, $f4
	bc1t label25
	li.d $f2, 1.00
	s.d $f2, -8($fp)

label25:    	
	li.d $f2, 1.00
	li.d $f4, 2.00
	c.eq.d $f2, $f4
	bc1f label26
	li.d $f2, 1.00
	s.d $f2, -8($fp)

label26:    	
	li.d $f2, 1.00
	l.d $f4, -8($fp)
	c.eq.d $f2, $f4
	bc1t label27
	li.d $f2, 0.00
	s.d $f2, -8($fp)

label27:    	
	j label29

label28:    	
	li.d $f2, 1.90
	s.d $f2, -8($fp)

label29:    	
	li.d $f2, 1.00
	li.d $f4, 2.00
	c.eq.d $f2, $f4
	bc1t label28
	j label31

label30:    	
	li $v0, 3
	l.d $f12, -8($fp)
	syscall
	li.d $f2, 1.00
	s.d $f2, -8($fp)

label31:    	
	li.d $f2, 1.00
	li.d $f4, 0.00
	c.le.d $f2, $f4
	bc1t label30
	j label33

label32:    	
	li.d $f2, 1.00
	s.d $f2, -8($fp)

label33:    	
	li.d $f2, 1.00
	li.d $f4, 2.00
	c.lt.d $f2, $f4
	bc1f label32

label24:    	
	li $v0, 3
	l.d $f12, -8($fp)
	syscall
	lw $t6, y_
	li $t7, 3
	add $t8, $t6, $t7
	li $t6, 1
	add $t7, $t8, $t6
	sw $t7, y_
	li $t6, 1
	li $t7, 2
	add $t8, $t6, $t7
	sw $t8, 0($fp)
	lw $t6, -4($fp)
	li $t7, 2
	add $t8, $t6, $t7
	li $t6, 4
	mul $t7, $t8, $t6
	li $t6, 5
	sub $t8, $t7, $t6
	sw $t8, 0($fp)
	lw $t6, 0($fp)
	neg $t7, $t6
	li $t6, 10
	li $t8, 4
	mul $t9, $t6, $t8
	add $t6, $t7, $t9
	li $t7, 6
	sub $t8, $t6, $t7
	sw $t8, -4($fp)
	li $t6, 1
	li $t7, 2
	slt $t8, $t6, $t7
	beq $t8, $zero, label34 
	li $t6, 1
	or $t9, $t6, $zero
	j label35

label34:    	
	li $t7, 2
	or $t9, $t7, $zero

label35:    	
	sw $t9, 0($fp)
	li $t6, 1
	li $t7, 2
	slt $t8, $t6, $t7
	li $t6, 2
	li $t7, 3
	slt $t9, $t6, $t7
	and $t6, $t8, $t9
	beq $t6, $zero, label36 
	li $t7, 1
	or $t9, $t7, $zero
	j label37

label36:    	
	li $t8, 2
	or $t9, $t8, $zero

label37:    	
	sw $t9, -4($fp)
	li $t6, 1
	li $t7, 2
	slt $t8, $t6, $t7
	beq $t8, $zero, label38 
	li $t6, 3
	sw $t6, 0($fp)
	j label39

label38:    	
	li $t6, 2
	sw $t6, 0($fp)

label39:    	
	li $t6, 1
	li $t7, 2
	li $t8, 4
	slt $t9, $t7, $t8
	sltu $t7, $t9, $t6
	beq $t7, $zero, label40 
	li $t6, 3
	sw $t6, 0($fp)

label40:    	
	li $t6, 3
	sw $t6, 0($fp)

label41:    	
	lw $t6, -4($fp)
	sw $t6, 0($fp)
	li $t6, 3
	sw $t6, 0($fp)
	li $t6, 0
	sw $t6, -4($fp)

label42:    	
	li $t6, 1
	li $t7, 2
	sgt $t8, $t6, $t7
	bne $t8, $zero, label41 
	li $t6, 5
	sw $t6, 0($fp)
	lw $t6, -4($fp)
	neg $t7, $t6
	neg $t6, $t7
	neg $t7, $t6
	neg $t6, $t7
	neg $t7, $t6
	sw $t7, 0($fp)
	li $t6, 1
	neg $t7, $t6
	sw $t7, 0($fp)
	lw $t6, 0($fp)
	li $t7, 1
	add $t8, $t6, $t7
	sw $t8, -4($fp)
	lw $t6, 0($fp)
	lw $t7, -4($fp)
	add $t8, $t6, $t7
	sw $t8, 0($fp)
	l.d $f2, x_
	li.d $f4, 1.00
	add.d $f6, $f2, $f4
	li.d $f2, 3.00
	add.d $f4, $f6, $f2
	s.d $f4, x_
	j label44

label43:    	
	li $t6, 2
	neg $t8, $t6
	sw $t8, 0($fp)

label44:    	
	lw $t6, 0($fp)
	li $t7, 189
	neg $t8, $t7
	seq $t7, $t6, $t8
	bne $t7, $zero, label43 
	lw $t6, 0($fp)
	li $t7, 1
	add $t8, $t6, $t7
	sw $t8, -4($fp)
	lw $t6, 0($fp)
	lw $t7, -4($fp)
	add $t8, $t6, $t7
	sw $t8, 0($fp)
	l.d $f2, x_
	li.d $f4, 1.00
	add.d $f6, $f2, $f4
	li.d $f2, 3.00
	add.d $f4, $f6, $f2
	s.d $f4, x_
	li.d $f2, 1.00
	s.d $f2, x_

# Epilogue Begins
epilogue_main:
	add $sp, $sp, 32
	lw $fp, -4($sp)  
	lw $ra, 0($sp)   
	jr        $31		# Jump back to the called procedure
# Epilogue Ends

