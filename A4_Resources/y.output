Terminals unused in grammar

   BBNUM
   RETURN
   UMINUS


State 60 conflicts: 1 shift/reduce
State 100 conflicts: 1 shift/reduce
State 113 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: global_variable_declaration_list procedure_definition

    2 procedure_definition: VOID NAME '(' ')' '{' variable_declaration_list statement_list '}'

    3 global_variable_declaration_list: variable_declaration_list

    4 variable_declaration_list: variable_declaration_list variable_declaration
    5                          | %empty

    6 variable_declaration: type variable_list ';'

    7 type: INTEGER
    8     | FLOAT

    9 variable_list: NAME
   10              | variable_list ',' NAME

   11 statement_list: %empty
   12               | statement_list single_stmt

   13 single_stmt: assignment_statement
   14            | if_stmt
   15            | while_stmt
   16            | do_while_stmt

   17 assignment_statement: variable ASSIGN expresssion ';'
   18                     | variable ASSIGN conditional_expr ';'

   19 expresssion: expresssion '*' expresssion
   20            | expresssion '/' expresssion
   21            | expresssion '+' expresssion
   22            | expresssion '-' expresssion
   23            | variable
   24            | constant
   25            | '(' expresssion ')'
   26            | '-' variable
   27            | '-' constant
   28            | '-' '(' expresssion ')'

   29 variable: NAME

   30 constant: INTEGER_NUMBER
   31         | DOUBLE_NUMBER

   32 conditional_expr: logical_expr '?' expresssion ':' expresssion

   33 if_stmt: IF '(' logical_expr ')' '{' statement_list '}'
   34        | IF '(' logical_expr ')' single_stmt
   35        | IF '(' logical_expr ')' '{' statement_list '}' ELSE '{' statement_list '}'
   36        | IF '(' logical_expr ')' single_stmt ELSE '{' statement_list '}'
   37        | IF '(' logical_expr ')' '{' statement_list '}' ELSE single_stmt
   38        | IF '(' logical_expr ')' single_stmt ELSE single_stmt

   39 while_stmt: WHILE '(' logical_expr ')' '{' statement_list '}'
   40           | WHILE '(' logical_expr ')' single_stmt

   41 do_while_stmt: DO '{' statement_list '}' WHILE '(' logical_expr ')' ';'
   42              | DO single_stmt WHILE '(' logical_expr ')' ';'

   43 logical_expr: logical_expr AND logical_expr
   44             | logical_expr OR logical_expr
   45             | NOT logical_expr
   46             | '(' logical_expr ')'
   47             | relational_expr

   48 relational_expr: expresssion LESS_THAN expresssion
   49                | expresssion LESS_THAN_EQUAL expresssion
   50                | expresssion GREATER_THAN expresssion
   51                | expresssion GREATER_THAN_EQUAL expresssion
   52                | expresssion EQUAL expresssion
   53                | expresssion NOT_EQUAL expresssion
   54                | '(' relational_expr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 2 25 28 33 34 35 36 37 38 39 40 41 42 46 54
')' (41) 2 25 28 33 34 35 36 37 38 39 40 41 42 46 54
'*' (42) 19
'+' (43) 21
',' (44) 10
'-' (45) 22 26 27 28
'/' (47) 20
':' (58) 32
';' (59) 6 17 18 41 42
'?' (63) 32
'{' (123) 2 33 35 36 37 39 41
'}' (125) 2 33 35 36 37 39 41
error (256)
INTEGER_NUMBER (258) 30
BBNUM (259)
DOUBLE_NUMBER (260) 31
NAME (261) 2 9 10 29
RETURN (262)
INTEGER (263) 7
FLOAT (264) 8
ASSIGN (265) 17 18
VOID (266) 2
UMINUS (267)
WHILE (268) 39 40 41 42
GREATER_THAN (269) 50
NOT_EQUAL (270) 53
LESS_THAN (271) 48
LESS_THAN_EQUAL (272) 49
EQUAL (273) 52
GREATER_THAN_EQUAL (274) 51
IF (275) 33 34 35 36 37 38
ELSE (276) 35 36 37 38
DO (277) 41 42
AND (278) 43
OR (279) 44
NOT (280) 45


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1, on right: 0
procedure_definition (40)
    on left: 2, on right: 1
global_variable_declaration_list (41)
    on left: 3, on right: 1
variable_declaration_list (42)
    on left: 4 5, on right: 2 3 4
variable_declaration (43)
    on left: 6, on right: 4
type (44)
    on left: 7 8, on right: 6
variable_list (45)
    on left: 9 10, on right: 6 10
statement_list (46)
    on left: 11 12, on right: 2 12 33 35 36 37 39 41
single_stmt (47)
    on left: 13 14 15 16, on right: 12 34 36 37 38 40 42
assignment_statement (48)
    on left: 17 18, on right: 13
expresssion (49)
    on left: 19 20 21 22 23 24 25 26 27 28, on right: 17 19 20 21 22
    25 28 32 48 49 50 51 52 53
variable (50)
    on left: 29, on right: 17 18 23 26
constant (51)
    on left: 30 31, on right: 24 27
conditional_expr (52)
    on left: 32, on right: 18
if_stmt (53)
    on left: 33 34 35 36 37 38, on right: 14
while_stmt (54)
    on left: 39 40, on right: 15
do_while_stmt (55)
    on left: 41 42, on right: 16
logical_expr (56)
    on left: 43 44 45 46 47, on right: 32 33 34 35 36 37 38 39 40 41
    42 43 44 45 46
relational_expr (57)
    on left: 48 49 50 51 52 53 54, on right: 47 54


State 0

    0 $accept: . program $end

    $default  reduce using rule 5 (variable_declaration_list)

    program                           go to state 1
    global_variable_declaration_list  go to state 2
    variable_declaration_list         go to state 3


State 1

    0 $accept: program . $end

    $end  shift, and go to state 4


State 2

    1 program: global_variable_declaration_list . procedure_definition

    VOID  shift, and go to state 5

    procedure_definition  go to state 6


State 3

    3 global_variable_declaration_list: variable_declaration_list .
    4 variable_declaration_list: variable_declaration_list . variable_declaration

    INTEGER  shift, and go to state 7
    FLOAT    shift, and go to state 8

    $default  reduce using rule 3 (global_variable_declaration_list)

    variable_declaration  go to state 9
    type                  go to state 10


State 4

    0 $accept: program $end .

    $default  accept


State 5

    2 procedure_definition: VOID . NAME '(' ')' '{' variable_declaration_list statement_list '}'

    NAME  shift, and go to state 11


State 6

    1 program: global_variable_declaration_list procedure_definition .

    $default  reduce using rule 1 (program)


State 7

    7 type: INTEGER .

    $default  reduce using rule 7 (type)


State 8

    8 type: FLOAT .

    $default  reduce using rule 8 (type)


State 9

    4 variable_declaration_list: variable_declaration_list variable_declaration .

    $default  reduce using rule 4 (variable_declaration_list)


State 10

    6 variable_declaration: type . variable_list ';'

    NAME  shift, and go to state 12

    variable_list  go to state 13


State 11

    2 procedure_definition: VOID NAME . '(' ')' '{' variable_declaration_list statement_list '}'

    '('  shift, and go to state 14


State 12

    9 variable_list: NAME .

    $default  reduce using rule 9 (variable_list)


State 13

    6 variable_declaration: type variable_list . ';'
   10 variable_list: variable_list . ',' NAME

    ';'  shift, and go to state 15
    ','  shift, and go to state 16


State 14

    2 procedure_definition: VOID NAME '(' . ')' '{' variable_declaration_list statement_list '}'

    ')'  shift, and go to state 17


State 15

    6 variable_declaration: type variable_list ';' .

    $default  reduce using rule 6 (variable_declaration)


State 16

   10 variable_list: variable_list ',' . NAME

    NAME  shift, and go to state 18


State 17

    2 procedure_definition: VOID NAME '(' ')' . '{' variable_declaration_list statement_list '}'

    '{'  shift, and go to state 19


State 18

   10 variable_list: variable_list ',' NAME .

    $default  reduce using rule 10 (variable_list)


State 19

    2 procedure_definition: VOID NAME '(' ')' '{' . variable_declaration_list statement_list '}'

    $default  reduce using rule 5 (variable_declaration_list)

    variable_declaration_list  go to state 20


State 20

    2 procedure_definition: VOID NAME '(' ')' '{' variable_declaration_list . statement_list '}'
    4 variable_declaration_list: variable_declaration_list . variable_declaration

    INTEGER  shift, and go to state 7
    FLOAT    shift, and go to state 8

    $default  reduce using rule 11 (statement_list)

    variable_declaration  go to state 9
    type                  go to state 10
    statement_list        go to state 21


State 21

    2 procedure_definition: VOID NAME '(' ')' '{' variable_declaration_list statement_list . '}'
   12 statement_list: statement_list . single_stmt

    NAME   shift, and go to state 22
    WHILE  shift, and go to state 23
    IF     shift, and go to state 24
    DO     shift, and go to state 25
    '}'    shift, and go to state 26

    single_stmt           go to state 27
    assignment_statement  go to state 28
    variable              go to state 29
    if_stmt               go to state 30
    while_stmt            go to state 31
    do_while_stmt         go to state 32


State 22

   29 variable: NAME .

    $default  reduce using rule 29 (variable)


State 23

   39 while_stmt: WHILE . '(' logical_expr ')' '{' statement_list '}'
   40           | WHILE . '(' logical_expr ')' single_stmt

    '('  shift, and go to state 33


State 24

   33 if_stmt: IF . '(' logical_expr ')' '{' statement_list '}'
   34        | IF . '(' logical_expr ')' single_stmt
   35        | IF . '(' logical_expr ')' '{' statement_list '}' ELSE '{' statement_list '}'
   36        | IF . '(' logical_expr ')' single_stmt ELSE '{' statement_list '}'
   37        | IF . '(' logical_expr ')' '{' statement_list '}' ELSE single_stmt
   38        | IF . '(' logical_expr ')' single_stmt ELSE single_stmt

    '('  shift, and go to state 34


State 25

   41 do_while_stmt: DO . '{' statement_list '}' WHILE '(' logical_expr ')' ';'
   42              | DO . single_stmt WHILE '(' logical_expr ')' ';'

    NAME   shift, and go to state 22
    WHILE  shift, and go to state 23
    IF     shift, and go to state 24
    DO     shift, and go to state 25
    '{'    shift, and go to state 35

    single_stmt           go to state 36
    assignment_statement  go to state 28
    variable              go to state 29
    if_stmt               go to state 30
    while_stmt            go to state 31
    do_while_stmt         go to state 32


State 26

    2 procedure_definition: VOID NAME '(' ')' '{' variable_declaration_list statement_list '}' .

    $default  reduce using rule 2 (procedure_definition)


State 27

   12 statement_list: statement_list single_stmt .

    $default  reduce using rule 12 (statement_list)


State 28

   13 single_stmt: assignment_statement .

    $default  reduce using rule 13 (single_stmt)


State 29

   17 assignment_statement: variable . ASSIGN expresssion ';'
   18                     | variable . ASSIGN conditional_expr ';'

    ASSIGN  shift, and go to state 37


State 30

   14 single_stmt: if_stmt .

    $default  reduce using rule 14 (single_stmt)


State 31

   15 single_stmt: while_stmt .

    $default  reduce using rule 15 (single_stmt)


State 32

   16 single_stmt: do_while_stmt .

    $default  reduce using rule 16 (single_stmt)


State 33

   39 while_stmt: WHILE '(' . logical_expr ')' '{' statement_list '}'
   40           | WHILE '(' . logical_expr ')' single_stmt

    INTEGER_NUMBER  shift, and go to state 38
    DOUBLE_NUMBER   shift, and go to state 39
    NAME            shift, and go to state 22
    NOT             shift, and go to state 40
    '-'             shift, and go to state 41
    '('             shift, and go to state 42

    expresssion      go to state 43
    variable         go to state 44
    constant         go to state 45
    logical_expr     go to state 46
    relational_expr  go to state 47


State 34

   33 if_stmt: IF '(' . logical_expr ')' '{' statement_list '}'
   34        | IF '(' . logical_expr ')' single_stmt
   35        | IF '(' . logical_expr ')' '{' statement_list '}' ELSE '{' statement_list '}'
   36        | IF '(' . logical_expr ')' single_stmt ELSE '{' statement_list '}'
   37        | IF '(' . logical_expr ')' '{' statement_list '}' ELSE single_stmt
   38        | IF '(' . logical_expr ')' single_stmt ELSE single_stmt

    INTEGER_NUMBER  shift, and go to state 38
    DOUBLE_NUMBER   shift, and go to state 39
    NAME            shift, and go to state 22
    NOT             shift, and go to state 40
    '-'             shift, and go to state 41
    '('             shift, and go to state 42

    expresssion      go to state 43
    variable         go to state 44
    constant         go to state 45
    logical_expr     go to state 48
    relational_expr  go to state 47


State 35

   41 do_while_stmt: DO '{' . statement_list '}' WHILE '(' logical_expr ')' ';'

    $default  reduce using rule 11 (statement_list)

    statement_list  go to state 49


State 36

   42 do_while_stmt: DO single_stmt . WHILE '(' logical_expr ')' ';'

    WHILE  shift, and go to state 50


State 37

   17 assignment_statement: variable ASSIGN . expresssion ';'
   18                     | variable ASSIGN . conditional_expr ';'

    INTEGER_NUMBER  shift, and go to state 38
    DOUBLE_NUMBER   shift, and go to state 39
    NAME            shift, and go to state 22
    NOT             shift, and go to state 40
    '-'             shift, and go to state 41
    '('             shift, and go to state 42

    expresssion       go to state 51
    variable          go to state 44
    constant          go to state 45
    conditional_expr  go to state 52
    logical_expr      go to state 53
    relational_expr   go to state 47


State 38

   30 constant: INTEGER_NUMBER .

    $default  reduce using rule 30 (constant)


State 39

   31 constant: DOUBLE_NUMBER .

    $default  reduce using rule 31 (constant)


State 40

   45 logical_expr: NOT . logical_expr

    INTEGER_NUMBER  shift, and go to state 38
    DOUBLE_NUMBER   shift, and go to state 39
    NAME            shift, and go to state 22
    NOT             shift, and go to state 40
    '-'             shift, and go to state 41
    '('             shift, and go to state 42

    expresssion      go to state 43
    variable         go to state 44
    constant         go to state 45
    logical_expr     go to state 54
    relational_expr  go to state 47


State 41

   26 expresssion: '-' . variable
   27            | '-' . constant
   28            | '-' . '(' expresssion ')'

    INTEGER_NUMBER  shift, and go to state 38
    DOUBLE_NUMBER   shift, and go to state 39
    NAME            shift, and go to state 22
    '('             shift, and go to state 55

    variable  go to state 56
    constant  go to state 57


State 42

   25 expresssion: '(' . expresssion ')'
   46 logical_expr: '(' . logical_expr ')'
   54 relational_expr: '(' . relational_expr ')'

    INTEGER_NUMBER  shift, and go to state 38
    DOUBLE_NUMBER   shift, and go to state 39
    NAME            shift, and go to state 22
    NOT             shift, and go to state 40
    '-'             shift, and go to state 41
    '('             shift, and go to state 42

    expresssion      go to state 58
    variable         go to state 44
    constant         go to state 45
    logical_expr     go to state 59
    relational_expr  go to state 60


State 43

   19 expresssion: expresssion . '*' expresssion
   20            | expresssion . '/' expresssion
   21            | expresssion . '+' expresssion
   22            | expresssion . '-' expresssion
   48 relational_expr: expresssion . LESS_THAN expresssion
   49                | expresssion . LESS_THAN_EQUAL expresssion
   50                | expresssion . GREATER_THAN expresssion
   51                | expresssion . GREATER_THAN_EQUAL expresssion
   52                | expresssion . EQUAL expresssion
   53                | expresssion . NOT_EQUAL expresssion

    GREATER_THAN        shift, and go to state 61
    NOT_EQUAL           shift, and go to state 62
    LESS_THAN           shift, and go to state 63
    LESS_THAN_EQUAL     shift, and go to state 64
    EQUAL               shift, and go to state 65
    GREATER_THAN_EQUAL  shift, and go to state 66
    '+'                 shift, and go to state 67
    '-'                 shift, and go to state 68
    '*'                 shift, and go to state 69
    '/'                 shift, and go to state 70


State 44

   23 expresssion: variable .

    $default  reduce using rule 23 (expresssion)


State 45

   24 expresssion: constant .

    $default  reduce using rule 24 (expresssion)


State 46

   39 while_stmt: WHILE '(' logical_expr . ')' '{' statement_list '}'
   40           | WHILE '(' logical_expr . ')' single_stmt
   43 logical_expr: logical_expr . AND logical_expr
   44             | logical_expr . OR logical_expr

    AND  shift, and go to state 71
    OR   shift, and go to state 72
    ')'  shift, and go to state 73


State 47

   47 logical_expr: relational_expr .

    $default  reduce using rule 47 (logical_expr)


State 48

   33 if_stmt: IF '(' logical_expr . ')' '{' statement_list '}'
   34        | IF '(' logical_expr . ')' single_stmt
   35        | IF '(' logical_expr . ')' '{' statement_list '}' ELSE '{' statement_list '}'
   36        | IF '(' logical_expr . ')' single_stmt ELSE '{' statement_list '}'
   37        | IF '(' logical_expr . ')' '{' statement_list '}' ELSE single_stmt
   38        | IF '(' logical_expr . ')' single_stmt ELSE single_stmt
   43 logical_expr: logical_expr . AND logical_expr
   44             | logical_expr . OR logical_expr

    AND  shift, and go to state 71
    OR   shift, and go to state 72
    ')'  shift, and go to state 74


State 49

   12 statement_list: statement_list . single_stmt
   41 do_while_stmt: DO '{' statement_list . '}' WHILE '(' logical_expr ')' ';'

    NAME   shift, and go to state 22
    WHILE  shift, and go to state 23
    IF     shift, and go to state 24
    DO     shift, and go to state 25
    '}'    shift, and go to state 75

    single_stmt           go to state 27
    assignment_statement  go to state 28
    variable              go to state 29
    if_stmt               go to state 30
    while_stmt            go to state 31
    do_while_stmt         go to state 32


State 50

   42 do_while_stmt: DO single_stmt WHILE . '(' logical_expr ')' ';'

    '('  shift, and go to state 76


State 51

   17 assignment_statement: variable ASSIGN expresssion . ';'
   19 expresssion: expresssion . '*' expresssion
   20            | expresssion . '/' expresssion
   21            | expresssion . '+' expresssion
   22            | expresssion . '-' expresssion
   48 relational_expr: expresssion . LESS_THAN expresssion
   49                | expresssion . LESS_THAN_EQUAL expresssion
   50                | expresssion . GREATER_THAN expresssion
   51                | expresssion . GREATER_THAN_EQUAL expresssion
   52                | expresssion . EQUAL expresssion
   53                | expresssion . NOT_EQUAL expresssion

    GREATER_THAN        shift, and go to state 61
    NOT_EQUAL           shift, and go to state 62
    LESS_THAN           shift, and go to state 63
    LESS_THAN_EQUAL     shift, and go to state 64
    EQUAL               shift, and go to state 65
    GREATER_THAN_EQUAL  shift, and go to state 66
    '+'                 shift, and go to state 67
    '-'                 shift, and go to state 68
    '*'                 shift, and go to state 69
    '/'                 shift, and go to state 70
    ';'                 shift, and go to state 77


State 52

   18 assignment_statement: variable ASSIGN conditional_expr . ';'

    ';'  shift, and go to state 78


State 53

   32 conditional_expr: logical_expr . '?' expresssion ':' expresssion
   43 logical_expr: logical_expr . AND logical_expr
   44             | logical_expr . OR logical_expr

    AND  shift, and go to state 71
    OR   shift, and go to state 72
    '?'  shift, and go to state 79


State 54

   43 logical_expr: logical_expr . AND logical_expr
   44             | logical_expr . OR logical_expr
   45             | NOT logical_expr .

    $default  reduce using rule 45 (logical_expr)


State 55

   28 expresssion: '-' '(' . expresssion ')'

    INTEGER_NUMBER  shift, and go to state 38
    DOUBLE_NUMBER   shift, and go to state 39
    NAME            shift, and go to state 22
    '-'             shift, and go to state 41
    '('             shift, and go to state 80

    expresssion  go to state 81
    variable     go to state 44
    constant     go to state 45


State 56

   26 expresssion: '-' variable .

    $default  reduce using rule 26 (expresssion)


State 57

   27 expresssion: '-' constant .

    $default  reduce using rule 27 (expresssion)


State 58

   19 expresssion: expresssion . '*' expresssion
   20            | expresssion . '/' expresssion
   21            | expresssion . '+' expresssion
   22            | expresssion . '-' expresssion
   25            | '(' expresssion . ')'
   48 relational_expr: expresssion . LESS_THAN expresssion
   49                | expresssion . LESS_THAN_EQUAL expresssion
   50                | expresssion . GREATER_THAN expresssion
   51                | expresssion . GREATER_THAN_EQUAL expresssion
   52                | expresssion . EQUAL expresssion
   53                | expresssion . NOT_EQUAL expresssion

    GREATER_THAN        shift, and go to state 61
    NOT_EQUAL           shift, and go to state 62
    LESS_THAN           shift, and go to state 63
    LESS_THAN_EQUAL     shift, and go to state 64
    EQUAL               shift, and go to state 65
    GREATER_THAN_EQUAL  shift, and go to state 66
    '+'                 shift, and go to state 67
    '-'                 shift, and go to state 68
    '*'                 shift, and go to state 69
    '/'                 shift, and go to state 70
    ')'                 shift, and go to state 82


State 59

   43 logical_expr: logical_expr . AND logical_expr
   44             | logical_expr . OR logical_expr
   46             | '(' logical_expr . ')'

    AND  shift, and go to state 71
    OR   shift, and go to state 72
    ')'  shift, and go to state 83


State 60

   47 logical_expr: relational_expr .
   54 relational_expr: '(' relational_expr . ')'

    ')'  shift, and go to state 84

    ')'       [reduce using rule 47 (logical_expr)]
    $default  reduce using rule 47 (logical_expr)


State 61

   50 relational_expr: expresssion GREATER_THAN . expresssion

    INTEGER_NUMBER  shift, and go to state 38
    DOUBLE_NUMBER   shift, and go to state 39
    NAME            shift, and go to state 22
    '-'             shift, and go to state 41
    '('             shift, and go to state 80

    expresssion  go to state 85
    variable     go to state 44
    constant     go to state 45


State 62

   53 relational_expr: expresssion NOT_EQUAL . expresssion

    INTEGER_NUMBER  shift, and go to state 38
    DOUBLE_NUMBER   shift, and go to state 39
    NAME            shift, and go to state 22
    '-'             shift, and go to state 41
    '('             shift, and go to state 80

    expresssion  go to state 86
    variable     go to state 44
    constant     go to state 45


State 63

   48 relational_expr: expresssion LESS_THAN . expresssion

    INTEGER_NUMBER  shift, and go to state 38
    DOUBLE_NUMBER   shift, and go to state 39
    NAME            shift, and go to state 22
    '-'             shift, and go to state 41
    '('             shift, and go to state 80

    expresssion  go to state 87
    variable     go to state 44
    constant     go to state 45


State 64

   49 relational_expr: expresssion LESS_THAN_EQUAL . expresssion

    INTEGER_NUMBER  shift, and go to state 38
    DOUBLE_NUMBER   shift, and go to state 39
    NAME            shift, and go to state 22
    '-'             shift, and go to state 41
    '('             shift, and go to state 80

    expresssion  go to state 88
    variable     go to state 44
    constant     go to state 45


State 65

   52 relational_expr: expresssion EQUAL . expresssion

    INTEGER_NUMBER  shift, and go to state 38
    DOUBLE_NUMBER   shift, and go to state 39
    NAME            shift, and go to state 22
    '-'             shift, and go to state 41
    '('             shift, and go to state 80

    expresssion  go to state 89
    variable     go to state 44
    constant     go to state 45


State 66

   51 relational_expr: expresssion GREATER_THAN_EQUAL . expresssion

    INTEGER_NUMBER  shift, and go to state 38
    DOUBLE_NUMBER   shift, and go to state 39
    NAME            shift, and go to state 22
    '-'             shift, and go to state 41
    '('             shift, and go to state 80

    expresssion  go to state 90
    variable     go to state 44
    constant     go to state 45


State 67

   21 expresssion: expresssion '+' . expresssion

    INTEGER_NUMBER  shift, and go to state 38
    DOUBLE_NUMBER   shift, and go to state 39
    NAME            shift, and go to state 22
    '-'             shift, and go to state 41
    '('             shift, and go to state 80

    expresssion  go to state 91
    variable     go to state 44
    constant     go to state 45


State 68

   22 expresssion: expresssion '-' . expresssion

    INTEGER_NUMBER  shift, and go to state 38
    DOUBLE_NUMBER   shift, and go to state 39
    NAME            shift, and go to state 22
    '-'             shift, and go to state 41
    '('             shift, and go to state 80

    expresssion  go to state 92
    variable     go to state 44
    constant     go to state 45


State 69

   19 expresssion: expresssion '*' . expresssion

    INTEGER_NUMBER  shift, and go to state 38
    DOUBLE_NUMBER   shift, and go to state 39
    NAME            shift, and go to state 22
    '-'             shift, and go to state 41
    '('             shift, and go to state 80

    expresssion  go to state 93
    variable     go to state 44
    constant     go to state 45


State 70

   20 expresssion: expresssion '/' . expresssion

    INTEGER_NUMBER  shift, and go to state 38
    DOUBLE_NUMBER   shift, and go to state 39
    NAME            shift, and go to state 22
    '-'             shift, and go to state 41
    '('             shift, and go to state 80

    expresssion  go to state 94
    variable     go to state 44
    constant     go to state 45


State 71

   43 logical_expr: logical_expr AND . logical_expr

    INTEGER_NUMBER  shift, and go to state 38
    DOUBLE_NUMBER   shift, and go to state 39
    NAME            shift, and go to state 22
    NOT             shift, and go to state 40
    '-'             shift, and go to state 41
    '('             shift, and go to state 42

    expresssion      go to state 43
    variable         go to state 44
    constant         go to state 45
    logical_expr     go to state 95
    relational_expr  go to state 47


State 72

   44 logical_expr: logical_expr OR . logical_expr

    INTEGER_NUMBER  shift, and go to state 38
    DOUBLE_NUMBER   shift, and go to state 39
    NAME            shift, and go to state 22
    NOT             shift, and go to state 40
    '-'             shift, and go to state 41
    '('             shift, and go to state 42

    expresssion      go to state 43
    variable         go to state 44
    constant         go to state 45
    logical_expr     go to state 96
    relational_expr  go to state 47


State 73

   39 while_stmt: WHILE '(' logical_expr ')' . '{' statement_list '}'
   40           | WHILE '(' logical_expr ')' . single_stmt

    NAME   shift, and go to state 22
    WHILE  shift, and go to state 23
    IF     shift, and go to state 24
    DO     shift, and go to state 25
    '{'    shift, and go to state 97

    single_stmt           go to state 98
    assignment_statement  go to state 28
    variable              go to state 29
    if_stmt               go to state 30
    while_stmt            go to state 31
    do_while_stmt         go to state 32


State 74

   33 if_stmt: IF '(' logical_expr ')' . '{' statement_list '}'
   34        | IF '(' logical_expr ')' . single_stmt
   35        | IF '(' logical_expr ')' . '{' statement_list '}' ELSE '{' statement_list '}'
   36        | IF '(' logical_expr ')' . single_stmt ELSE '{' statement_list '}'
   37        | IF '(' logical_expr ')' . '{' statement_list '}' ELSE single_stmt
   38        | IF '(' logical_expr ')' . single_stmt ELSE single_stmt

    NAME   shift, and go to state 22
    WHILE  shift, and go to state 23
    IF     shift, and go to state 24
    DO     shift, and go to state 25
    '{'    shift, and go to state 99

    single_stmt           go to state 100
    assignment_statement  go to state 28
    variable              go to state 29
    if_stmt               go to state 30
    while_stmt            go to state 31
    do_while_stmt         go to state 32


State 75

   41 do_while_stmt: DO '{' statement_list '}' . WHILE '(' logical_expr ')' ';'

    WHILE  shift, and go to state 101


State 76

   42 do_while_stmt: DO single_stmt WHILE '(' . logical_expr ')' ';'

    INTEGER_NUMBER  shift, and go to state 38
    DOUBLE_NUMBER   shift, and go to state 39
    NAME            shift, and go to state 22
    NOT             shift, and go to state 40
    '-'             shift, and go to state 41
    '('             shift, and go to state 42

    expresssion      go to state 43
    variable         go to state 44
    constant         go to state 45
    logical_expr     go to state 102
    relational_expr  go to state 47


State 77

   17 assignment_statement: variable ASSIGN expresssion ';' .

    $default  reduce using rule 17 (assignment_statement)


State 78

   18 assignment_statement: variable ASSIGN conditional_expr ';' .

    $default  reduce using rule 18 (assignment_statement)


State 79

   32 conditional_expr: logical_expr '?' . expresssion ':' expresssion

    INTEGER_NUMBER  shift, and go to state 38
    DOUBLE_NUMBER   shift, and go to state 39
    NAME            shift, and go to state 22
    '-'             shift, and go to state 41
    '('             shift, and go to state 80

    expresssion  go to state 103
    variable     go to state 44
    constant     go to state 45


State 80

   25 expresssion: '(' . expresssion ')'

    INTEGER_NUMBER  shift, and go to state 38
    DOUBLE_NUMBER   shift, and go to state 39
    NAME            shift, and go to state 22
    '-'             shift, and go to state 41
    '('             shift, and go to state 80

    expresssion  go to state 104
    variable     go to state 44
    constant     go to state 45


State 81

   19 expresssion: expresssion . '*' expresssion
   20            | expresssion . '/' expresssion
   21            | expresssion . '+' expresssion
   22            | expresssion . '-' expresssion
   28            | '-' '(' expresssion . ')'

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    ')'  shift, and go to state 105


State 82

   25 expresssion: '(' expresssion ')' .

    $default  reduce using rule 25 (expresssion)


State 83

   46 logical_expr: '(' logical_expr ')' .

    $default  reduce using rule 46 (logical_expr)


State 84

   54 relational_expr: '(' relational_expr ')' .

    $default  reduce using rule 54 (relational_expr)


State 85

   19 expresssion: expresssion . '*' expresssion
   20            | expresssion . '/' expresssion
   21            | expresssion . '+' expresssion
   22            | expresssion . '-' expresssion
   50 relational_expr: expresssion GREATER_THAN expresssion .

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 50 (relational_expr)


State 86

   19 expresssion: expresssion . '*' expresssion
   20            | expresssion . '/' expresssion
   21            | expresssion . '+' expresssion
   22            | expresssion . '-' expresssion
   53 relational_expr: expresssion NOT_EQUAL expresssion .

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 53 (relational_expr)


State 87

   19 expresssion: expresssion . '*' expresssion
   20            | expresssion . '/' expresssion
   21            | expresssion . '+' expresssion
   22            | expresssion . '-' expresssion
   48 relational_expr: expresssion LESS_THAN expresssion .

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 48 (relational_expr)


State 88

   19 expresssion: expresssion . '*' expresssion
   20            | expresssion . '/' expresssion
   21            | expresssion . '+' expresssion
   22            | expresssion . '-' expresssion
   49 relational_expr: expresssion LESS_THAN_EQUAL expresssion .

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 49 (relational_expr)


State 89

   19 expresssion: expresssion . '*' expresssion
   20            | expresssion . '/' expresssion
   21            | expresssion . '+' expresssion
   22            | expresssion . '-' expresssion
   52 relational_expr: expresssion EQUAL expresssion .

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 52 (relational_expr)


State 90

   19 expresssion: expresssion . '*' expresssion
   20            | expresssion . '/' expresssion
   21            | expresssion . '+' expresssion
   22            | expresssion . '-' expresssion
   51 relational_expr: expresssion GREATER_THAN_EQUAL expresssion .

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 51 (relational_expr)


State 91

   19 expresssion: expresssion . '*' expresssion
   20            | expresssion . '/' expresssion
   21            | expresssion . '+' expresssion
   21            | expresssion '+' expresssion .
   22            | expresssion . '-' expresssion

    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 21 (expresssion)


State 92

   19 expresssion: expresssion . '*' expresssion
   20            | expresssion . '/' expresssion
   21            | expresssion . '+' expresssion
   22            | expresssion . '-' expresssion
   22            | expresssion '-' expresssion .

    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 22 (expresssion)


State 93

   19 expresssion: expresssion . '*' expresssion
   19            | expresssion '*' expresssion .
   20            | expresssion . '/' expresssion
   21            | expresssion . '+' expresssion
   22            | expresssion . '-' expresssion

    $default  reduce using rule 19 (expresssion)


State 94

   19 expresssion: expresssion . '*' expresssion
   20            | expresssion . '/' expresssion
   20            | expresssion '/' expresssion .
   21            | expresssion . '+' expresssion
   22            | expresssion . '-' expresssion

    $default  reduce using rule 20 (expresssion)


State 95

   43 logical_expr: logical_expr . AND logical_expr
   43             | logical_expr AND logical_expr .
   44             | logical_expr . OR logical_expr

    $default  reduce using rule 43 (logical_expr)


State 96

   43 logical_expr: logical_expr . AND logical_expr
   44             | logical_expr . OR logical_expr
   44             | logical_expr OR logical_expr .

    AND  shift, and go to state 71

    $default  reduce using rule 44 (logical_expr)


State 97

   39 while_stmt: WHILE '(' logical_expr ')' '{' . statement_list '}'

    $default  reduce using rule 11 (statement_list)

    statement_list  go to state 106


State 98

   40 while_stmt: WHILE '(' logical_expr ')' single_stmt .

    $default  reduce using rule 40 (while_stmt)


State 99

   33 if_stmt: IF '(' logical_expr ')' '{' . statement_list '}'
   35        | IF '(' logical_expr ')' '{' . statement_list '}' ELSE '{' statement_list '}'
   37        | IF '(' logical_expr ')' '{' . statement_list '}' ELSE single_stmt

    $default  reduce using rule 11 (statement_list)

    statement_list  go to state 107


State 100

   34 if_stmt: IF '(' logical_expr ')' single_stmt .
   36        | IF '(' logical_expr ')' single_stmt . ELSE '{' statement_list '}'
   38        | IF '(' logical_expr ')' single_stmt . ELSE single_stmt

    ELSE  shift, and go to state 108

    ELSE      [reduce using rule 34 (if_stmt)]
    $default  reduce using rule 34 (if_stmt)


State 101

   41 do_while_stmt: DO '{' statement_list '}' WHILE . '(' logical_expr ')' ';'

    '('  shift, and go to state 109


State 102

   42 do_while_stmt: DO single_stmt WHILE '(' logical_expr . ')' ';'
   43 logical_expr: logical_expr . AND logical_expr
   44             | logical_expr . OR logical_expr

    AND  shift, and go to state 71
    OR   shift, and go to state 72
    ')'  shift, and go to state 110


State 103

   19 expresssion: expresssion . '*' expresssion
   20            | expresssion . '/' expresssion
   21            | expresssion . '+' expresssion
   22            | expresssion . '-' expresssion
   32 conditional_expr: logical_expr '?' expresssion . ':' expresssion

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    ':'  shift, and go to state 111


State 104

   19 expresssion: expresssion . '*' expresssion
   20            | expresssion . '/' expresssion
   21            | expresssion . '+' expresssion
   22            | expresssion . '-' expresssion
   25            | '(' expresssion . ')'

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    ')'  shift, and go to state 82


State 105

   28 expresssion: '-' '(' expresssion ')' .

    $default  reduce using rule 28 (expresssion)


State 106

   12 statement_list: statement_list . single_stmt
   39 while_stmt: WHILE '(' logical_expr ')' '{' statement_list . '}'

    NAME   shift, and go to state 22
    WHILE  shift, and go to state 23
    IF     shift, and go to state 24
    DO     shift, and go to state 25
    '}'    shift, and go to state 112

    single_stmt           go to state 27
    assignment_statement  go to state 28
    variable              go to state 29
    if_stmt               go to state 30
    while_stmt            go to state 31
    do_while_stmt         go to state 32


State 107

   12 statement_list: statement_list . single_stmt
   33 if_stmt: IF '(' logical_expr ')' '{' statement_list . '}'
   35        | IF '(' logical_expr ')' '{' statement_list . '}' ELSE '{' statement_list '}'
   37        | IF '(' logical_expr ')' '{' statement_list . '}' ELSE single_stmt

    NAME   shift, and go to state 22
    WHILE  shift, and go to state 23
    IF     shift, and go to state 24
    DO     shift, and go to state 25
    '}'    shift, and go to state 113

    single_stmt           go to state 27
    assignment_statement  go to state 28
    variable              go to state 29
    if_stmt               go to state 30
    while_stmt            go to state 31
    do_while_stmt         go to state 32


State 108

   36 if_stmt: IF '(' logical_expr ')' single_stmt ELSE . '{' statement_list '}'
   38        | IF '(' logical_expr ')' single_stmt ELSE . single_stmt

    NAME   shift, and go to state 22
    WHILE  shift, and go to state 23
    IF     shift, and go to state 24
    DO     shift, and go to state 25
    '{'    shift, and go to state 114

    single_stmt           go to state 115
    assignment_statement  go to state 28
    variable              go to state 29
    if_stmt               go to state 30
    while_stmt            go to state 31
    do_while_stmt         go to state 32


State 109

   41 do_while_stmt: DO '{' statement_list '}' WHILE '(' . logical_expr ')' ';'

    INTEGER_NUMBER  shift, and go to state 38
    DOUBLE_NUMBER   shift, and go to state 39
    NAME            shift, and go to state 22
    NOT             shift, and go to state 40
    '-'             shift, and go to state 41
    '('             shift, and go to state 42

    expresssion      go to state 43
    variable         go to state 44
    constant         go to state 45
    logical_expr     go to state 116
    relational_expr  go to state 47


State 110

   42 do_while_stmt: DO single_stmt WHILE '(' logical_expr ')' . ';'

    ';'  shift, and go to state 117


State 111

   32 conditional_expr: logical_expr '?' expresssion ':' . expresssion

    INTEGER_NUMBER  shift, and go to state 38
    DOUBLE_NUMBER   shift, and go to state 39
    NAME            shift, and go to state 22
    '-'             shift, and go to state 41
    '('             shift, and go to state 80

    expresssion  go to state 118
    variable     go to state 44
    constant     go to state 45


State 112

   39 while_stmt: WHILE '(' logical_expr ')' '{' statement_list '}' .

    $default  reduce using rule 39 (while_stmt)


State 113

   33 if_stmt: IF '(' logical_expr ')' '{' statement_list '}' .
   35        | IF '(' logical_expr ')' '{' statement_list '}' . ELSE '{' statement_list '}'
   37        | IF '(' logical_expr ')' '{' statement_list '}' . ELSE single_stmt

    ELSE  shift, and go to state 119

    ELSE      [reduce using rule 33 (if_stmt)]
    $default  reduce using rule 33 (if_stmt)


State 114

   36 if_stmt: IF '(' logical_expr ')' single_stmt ELSE '{' . statement_list '}'

    $default  reduce using rule 11 (statement_list)

    statement_list  go to state 120


State 115

   38 if_stmt: IF '(' logical_expr ')' single_stmt ELSE single_stmt .

    $default  reduce using rule 38 (if_stmt)


State 116

   41 do_while_stmt: DO '{' statement_list '}' WHILE '(' logical_expr . ')' ';'
   43 logical_expr: logical_expr . AND logical_expr
   44             | logical_expr . OR logical_expr

    AND  shift, and go to state 71
    OR   shift, and go to state 72
    ')'  shift, and go to state 121


State 117

   42 do_while_stmt: DO single_stmt WHILE '(' logical_expr ')' ';' .

    $default  reduce using rule 42 (do_while_stmt)


State 118

   19 expresssion: expresssion . '*' expresssion
   20            | expresssion . '/' expresssion
   21            | expresssion . '+' expresssion
   22            | expresssion . '-' expresssion
   32 conditional_expr: logical_expr '?' expresssion ':' expresssion .

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 32 (conditional_expr)


State 119

   35 if_stmt: IF '(' logical_expr ')' '{' statement_list '}' ELSE . '{' statement_list '}'
   37        | IF '(' logical_expr ')' '{' statement_list '}' ELSE . single_stmt

    NAME   shift, and go to state 22
    WHILE  shift, and go to state 23
    IF     shift, and go to state 24
    DO     shift, and go to state 25
    '{'    shift, and go to state 122

    single_stmt           go to state 123
    assignment_statement  go to state 28
    variable              go to state 29
    if_stmt               go to state 30
    while_stmt            go to state 31
    do_while_stmt         go to state 32


State 120

   12 statement_list: statement_list . single_stmt
   36 if_stmt: IF '(' logical_expr ')' single_stmt ELSE '{' statement_list . '}'

    NAME   shift, and go to state 22
    WHILE  shift, and go to state 23
    IF     shift, and go to state 24
    DO     shift, and go to state 25
    '}'    shift, and go to state 124

    single_stmt           go to state 27
    assignment_statement  go to state 28
    variable              go to state 29
    if_stmt               go to state 30
    while_stmt            go to state 31
    do_while_stmt         go to state 32


State 121

   41 do_while_stmt: DO '{' statement_list '}' WHILE '(' logical_expr ')' . ';'

    ';'  shift, and go to state 125


State 122

   35 if_stmt: IF '(' logical_expr ')' '{' statement_list '}' ELSE '{' . statement_list '}'

    $default  reduce using rule 11 (statement_list)

    statement_list  go to state 126


State 123

   37 if_stmt: IF '(' logical_expr ')' '{' statement_list '}' ELSE single_stmt .

    $default  reduce using rule 37 (if_stmt)


State 124

   36 if_stmt: IF '(' logical_expr ')' single_stmt ELSE '{' statement_list '}' .

    $default  reduce using rule 36 (if_stmt)


State 125

   41 do_while_stmt: DO '{' statement_list '}' WHILE '(' logical_expr ')' ';' .

    $default  reduce using rule 41 (do_while_stmt)


State 126

   12 statement_list: statement_list . single_stmt
   35 if_stmt: IF '(' logical_expr ')' '{' statement_list '}' ELSE '{' statement_list . '}'

    NAME   shift, and go to state 22
    WHILE  shift, and go to state 23
    IF     shift, and go to state 24
    DO     shift, and go to state 25
    '}'    shift, and go to state 127

    single_stmt           go to state 27
    assignment_statement  go to state 28
    variable              go to state 29
    if_stmt               go to state 30
    while_stmt            go to state 31
    do_while_stmt         go to state 32


State 127

   35 if_stmt: IF '(' logical_expr ')' '{' statement_list '}' ELSE '{' statement_list '}' .

    $default  reduce using rule 35 (if_stmt)
